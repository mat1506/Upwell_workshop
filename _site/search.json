{
  "articles": [
    {
      "path": "about.html",
      "title": "Taller sobre construcción de bases de datos",
      "description": "En este taller explicaremos los fundamentos básicos sobre la construcción de bases de datos en ciencias ambientales, en particular en geociencias, el estado actual sobre ciencia abierta en Chile y la importancia de mantener bases de datos saludables y de acceso abierto y masivo.",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-03-31T12:35:47-03:00"
    },
    {
      "path": "colaborarGirR.html",
      "title": "Colaborando con git, Github y Rstudio",
      "description": "Este artículo es una traducción automática del artículo: https://www.sds.pub/collaborating-with-git-and-github.html\n",
      "author": [
        {
          "name": "Matías Frugone Álvarez",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2022-03-31T12:35:47-03:00"
    },
    {
      "path": "EjemploR.html",
      "title": "Un pequeño ejemplo con R",
      "description": "Realizaremos diferentes figuras con la función plot y ggplot\n",
      "author": [
        {
          "name": "Matías Frugone Álavarez",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nInstalar los paquetes necesarios\nEstablecer el directorio de trabajo\nMiremos los datos\nCalcular promedios de una variable para niveles de un factor\nAnálisis exploratorio de datos y gráficos\nBoxplot\nInstalar paquetes otra forma\nMatriz de plot en una figura\nggplot Histograma\nPlot de barras\nScatter plots\nAnalisis Exp. Bivariate\n\nDensity\nFacets\nCorrelación Bivariate\nVisualización de Correlación entre variables\n\nInstalar los paquetes necesarios\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(dplyr)\nlibrary(here)\n\n\n\nEstablecer el directorio de trabajo\n\n\nX <- read_csv(\"https://raw.githubusercontent.com/mat1506/Upwell_workshop/master/data/LEM_proxies.csv\")\n\n\n\nMiremos los datos\n\n\nstr(X) #para ver la estructura de los datos\n\n\nspec_tbl_df [501 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID             : chr [1:501] \"CHILL-LEM13-2C-1U 21-22 cm\" \"CHILL-LEM13-2C-1U 22-23 cm\" \"CHILL-LEM13-2C-1U 23-24 cm\" \"CHILL-LEM13-2C-1U 24-25 cm\" ...\n $ Unit           : chr [1:501] \"U1\" \"U1\" \"U1\" \"U1\" ...\n $ Facie          : chr [1:501] \"D1\" \"D1\" \"D1\" \"D1\" ...\n $ depth          : num [1:501] 0 1 2 3 4 5 6 7 8 9 ...\n $ MS             : num [1:501] 44.8 55.9 NA 67.4 NA ...\n $ Den            : num [1:501] 1.21 1.39 NA 1.41 NA ...\n $ FP             : num [1:501] 0.883 0.773 NA 0.758 NA ...\n $ TS             : num [1:501] 0.175 0.23 0.229 0.267 0.255 ...\n $ TC             : num [1:501] 2.42 1.9 2.03 2.11 2.07 ...\n $ TIC            : num [1:501] 0 0 0 0.196 0 ...\n $ TOC            : num [1:501] 2.42 1.9 2.03 1.91 2.07 ...\n $ BioSi          : num [1:501] 19.6 18.8 19.2 20.2 19.3 ...\n $ TN             : num [1:501] 0.278 NA NA NA NA 0.21 NA NA NA NA ...\n $ TOC/TN         : num [1:501] 10.2 NA NA NA NA ...\n $ d15N           : num [1:501] 1.43 NA NA NA NA ...\n $ d13C           : num [1:501] -25.6 NA NA NA NA ...\n $ Montmorillonite: chr [1:501] \"Present\" NA NA NA ...\n $ Muscovite      : chr [1:501] \"0.14\" NA NA NA ...\n $ Talc           : chr [1:501] \"0.096\" NA NA NA ...\n $ Riebeckite     : chr [1:501] \"0.075\" NA NA NA ...\n $ Clinochlore    : chr [1:501] \"0.192\" NA NA NA ...\n $ Microcline     : chr [1:501] \"0.284\" NA NA NA ...\n $ Quartz         : num [1:501] 2.21 NA NA NA NA ...\n $ Albite         : num [1:501] 8.72 NA NA NA NA ...\n $ Amorphous      : num [1:501] 39.4 NA NA NA NA NA NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = col_character(),\n  ..   Unit = col_character(),\n  ..   Facie = col_character(),\n  ..   depth = col_double(),\n  ..   MS = col_double(),\n  ..   Den = col_double(),\n  ..   FP = col_double(),\n  ..   TS = col_double(),\n  ..   TC = col_double(),\n  ..   TIC = col_double(),\n  ..   TOC = col_double(),\n  ..   BioSi = col_double(),\n  ..   TN = col_double(),\n  ..   `TOC/TN` = col_double(),\n  ..   d15N = col_double(),\n  ..   d13C = col_double(),\n  ..   Montmorillonite = col_character(),\n  ..   Muscovite = col_character(),\n  ..   Talc = col_character(),\n  ..   Riebeckite = col_character(),\n  ..   Clinochlore = col_character(),\n  ..   Microcline = col_character(),\n  ..   Quartz = col_double(),\n  ..   Albite = col_double(),\n  ..   Amorphous = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\nsummary(X[,5:16]) # Resumen de los datos\n\n\n       MS              Den              FP               TS         \n Min.   : 24.43   Min.   :1.210   Min.   :0.3045   Min.   :0.01617  \n 1st Qu.: 57.16   1st Qu.:1.378   1st Qu.:0.6940   1st Qu.:0.38217  \n Median : 76.15   Median :1.481   Median :0.7170   Median :0.61781  \n Mean   : 96.70   Mean   :1.491   Mean   :0.7113   Mean   :0.76149  \n 3rd Qu.:125.45   3rd Qu.:1.519   3rd Qu.:0.7805   3rd Qu.:1.11340  \n Max.   :273.65   Max.   :2.154   Max.   :0.8832   Max.   :6.82220  \n NA's   :209      NA's   :209     NA's   :209                       \n       TC                TIC               TOC         \n Min.   :-0.02204   Min.   :0.00000   Min.   :-0.1224  \n 1st Qu.: 2.04920   1st Qu.:0.00000   1st Qu.: 1.9743  \n Median : 2.86890   Median :0.04557   Median : 2.8238  \n Mean   : 2.71282   Mean   :0.10466   Mean   : 2.6058  \n 3rd Qu.: 3.60770   3rd Qu.:0.18158   3rd Qu.: 3.5163  \n Max.   : 5.59430   Max.   :1.06930   Max.   : 5.3409  \n                                      NA's   :1        \n     BioSi             TN             TOC/TN            d15N       \n Min.   : 5.37   Min.   :0.0360   Min.   : 1.628   Min.   :-1.151  \n 1st Qu.:15.50   1st Qu.:0.1969   1st Qu.: 7.292   1st Qu.: 0.238  \n Median :18.42   Median :0.3006   Median : 9.696   Median : 1.380  \n Mean   :17.64   Mean   :0.3291   Mean   :10.454   Mean   : 1.205  \n 3rd Qu.:20.81   3rd Qu.:0.4641   3rd Qu.:12.758   3rd Qu.: 2.040  \n Max.   :26.62   Max.   :0.7689   Max.   :20.770   Max.   : 3.166  \n NA's   :33      NA's   :377      NA's   :378      NA's   :407     \n      d13C       \n Min.   :-29.53  \n 1st Qu.:-26.10  \n Median :-24.55  \n Mean   :-23.66  \n 3rd Qu.:-22.51  \n Max.   :-16.65  \n NA's   :407     \n\nCalcular promedios de una variable para niveles de un factor\n\n\ntapply(X$TOC, X$Facie, mean) #calcular promedios por factor\n\n\n       D1        D2        D3        D4        D5      D6_a      D6_b \n1.8939686 1.6325068 3.8301412        NA 4.3219419 2.7576184 3.3545634 \n     D6_c        L1        L2        L3        L4        L5       LT2 \n4.3586846 0.8827930 0.4927908 0.1726453 0.4107186 0.7902270 2.7617361 \n       T1       T10       T11       T12       T13       T14       T15 \n0.5375500 0.8490357 0.3697850 1.0249300 1.0517100 1.8635000 2.1030470 \n      T16       T17       T18        T2        T3        T4        T5 \n1.9549800 2.6672900 0.9943400 0.5512890 0.6062123 0.6389503 1.7498500 \n       T6        T7        T8        T9       TL1 \n0.8491950 0.5136960 0.4327400 0.6375590 2.2273622 \n\nAnálisis exploratorio de datos y gráficos\nBoxplot\n\n\nboxplot(X$TOC ~ X$Unit, notch=TRUE, ylab=\"TOC\") #compara las medias visualmente\n\n\n\nh <- hist(X$TOC, plot = F)\nstr(h)\n\n\nList of 6\n $ breaks  : num [1:13] -0.5 0 0.5 1 1.5 2 2.5 3 3.5 4 ...\n $ counts  : int [1:12] 3 43 31 23 28 94 77 75 56 47 ...\n $ density : num [1:12] 0.012 0.172 0.124 0.092 0.112 0.376 0.308 0.3 0.224 0.188 ...\n $ mids    : num [1:12] -0.25 0.25 0.75 1.25 1.75 2.25 2.75 3.25 3.75 4.25 ...\n $ xname   : chr \"X$TOC\"\n $ equidist: logi TRUE\n - attr(*, \"class\")= chr \"histogram\"\n\nplot(h, col = heat.colors(length(h$mids))[length(h$count) - rank(h$count) + 1], ylim = c(0,   max(h$count) + 5),\n     main = \"Frequency histogram, El Maule (Organic Carbon)\",\n     sub = \"Total Organic Carbon\",\n     xlab = \"TOC (%)\")\n\n\n\n\nInstalar paquetes otra forma\n\n\nif(!require(dplyr)){\n  install.packages(\"dplyr\")\n  library(\"dplyr\")\n}\n\n\n\nMatriz de plot en una figura\n\n\ny01<-na.omit(select(X,TOC))\ny02<-na.omit(select(X,Unit,TOC,TIC,TS,TN))\n\npar(mfrow=c(2,2)) # 2x2 matrix of plots in one figure\nboxplot(y01$TOC, data=y01,notch=T, horizontal=T,main=\"Boxplot of TOC\")\nhist(y01$TOC, freq=F,main=\"Probability density for TOC\")\nlines(density(y01$TOC),lwd=2)\nlines(density(y01$TOC, adj=.5),lwd=1)\nlines(density(y01$TOC, adj=2),lwd=1.5)\nqqnorm(y01$TOC, main=\"QQ plot for Clay 0-10cm vs Normal distribution\",ylab=\"TOC %\")\nqqline(y01$TOC, col=4)\nqqnorm(log(y01$TOC), main=\"QQ plot for TOC vs lognormal distribution\",ylab=\"log(TOC %)\")\nqqline(log(y01$TOC), col=4)\n\n\n\n\nggplot Histograma\n{ggplot2} es una implementación de Grammar of Graphics de Wilkinson (2006), pero no es necesario leer los libros para comenzar a usarlo. Si volvemos a los datos de Star Wars (contenidos en dplyr) y deseamos dibujar una gráfica de barras del género, las siguientes líneas son suficientes:\n\n\nggplot(data = y02) +\n  geom_histogram(aes(x = TOC, fill = Unit))\n\n\n\nggplot(data = y02) +\n  geom_area(aes(x = TOC, fill = Unit), stat = \"bin\", position = \"stack\")\n\n\n\nggplot(y01, aes(x = TOC), bins = 30) + \n  geom_histogram(aes(y = ..density..), fill = 'red', alpha = 0.5) + \n  geom_density(colour = 'blue') + xlab(expression(bold('Simulated Samples'))) +\n  ylab(expression(bold('Density')))\n\n\n\n\nPlot de barras\n\n\nggplot(starwars, aes(gender)) +\n  geom_bar()\n\n\n\n\nEl primer argumento de la función son los datos (llamados starwars en este ejemplo), y luego la función aes (). Esta función es donde enumera las variables que desea asignar a la estética de las funciones geoms. En la segunda línea, verá que usamos la función geom_bar (). Esta función crea una gráfica de barras de la variable de género. Puede obtener diferentes tipos de gráficos utilizando diferentes funciones geom_. También puede proporcionar el argumento aes () a la función geom _ * ():\n\n\nggplot(starwars) +\n  geom_bar(aes(gender))\n\n\n\n\nLa diferencia entre estos dos enfoques es que cuando especificas la estética en la función ggplot(), todas las funciones geom _ * () que siguen heredarán esta estética. Esto es útil si desea evitar escribir el mismo código una y otra vez, pero puede ser problemático si necesita especificar una estética diferente para diferentes funciones geom _ * (). Esto quedará claro en un ejemplo posterior.\nPuede agregar opciones a sus gráficos, por ejemplo, puede cambiar el sistema de coordenadas en su gráfico de barras:\n\n\nggplot(starwars, aes(gender)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nScatter plots\nLos diagramas de dispersión son muy útiles, especialmente si está tratando de averiguar la relación entre dos variables. Por ejemplo, hagamos un diagrama de dispersión de la altura frente al peso de los personajes de Star Wars:\n\n\nstarwars %>%\n  filter(!str_detect(name, \"Jabba\")) %>%\n  ggplot() +\n    geom_point(aes(height, mass))\n\n\n\n\nAnalisis Exp. Bivariate\n\n\npar(mfrow=c(2,2))#\nplot(y02$TIC,y02$TN,xlim=c(0,1.2),ylim=c(0,1),cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5); abline(0,1,lty=2);\ntitle(\"TIC vs. TN\")\nabline(h=mean(y02$TN)); abline(v=mean(y02$TIC))\n#\nplot(y02$TOC,y02$TN,xlim=c(0,5.5),ylim=c(0,1),pch=20,cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5); abline(0,1,lty=2)\ntitle(\"TOC vs. TN\")\nabline(h=mean(y02$TN)); abline(v=mean(y02$TOC))\n#\nplot(y02$TOC,y02$TS,cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5); abline(0,1,lty=2)\ntitle(\"TOC vs. TS\")\nabline(h=mean(y02$TS)); abline(v=mean(y02$TOC))\n#\nplot(y02$TOC,y02$TIC,pch=20,cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5); abline(0,1,lty=2)\ntitle(\"TOC vs. TIC\")\nabline(h=mean(y02$TIC)); abline(v=mean(y02$TOC))\n\n\n\n\nDensity\n\n\nstarwars %>%\n  filter(gender %in% c(\"feminine\", \"masculine\")) %>%\n  ggplot(aes(height, fill = gender)) +\n  geom_density()\n\n\n\n\nFacets\nEn algunos casos, tiene una variable de factor que separa los datos que desea representar en diferentes categorías. Si desea tener un gráfico por categoría, puede usar la función facet_grid (). Sin embargo, tenga cuidado, esta función no toma una variable como argumento, sino una fórmula, de ahí el símbolo ~ en el siguiente código:\n\n\nstarwars %>%\n  rowwise() %>%\n  mutate(n_films = length(films)) %>%\n  mutate(more_1 = case_when(n_films == 1 ~ \"Exactly one movie\",\n                            n_films != 1 ~ \"More than 1 movie\")) %>%\n  mutate(human = case_when(species == \"Human\" ~ \"Human\",\n                           species != \"Human\" ~ \"Not Human\")) %>%\n  filter(gender %in% c(\"feminine\", \"masculine\"), !is.na(human)) %>%\n  ggplot(aes(height, fill = gender)) +\n  facet_grid(human ~ more_1) +\n  geom_density()\n\n\n\n\nPodemos agregar una línea de regresión a este diagrama de dispersión:\n\n\nstarwars %>%\n  filter(!str_detect(name, \"Jabba\")) %>%\n  ggplot() +\n    geom_point(aes(height, mass, size = birth_year, colour = gender)) +\n    geom_smooth(aes(height, mass), method  = \"lm\")\n\n\n\n\nCorrelación Bivariate\n\n\nsum((y02$TS-mean(y02$TS))*(y02$TOC-mean(y02$TOC)))/(length(y02$TS)-1)\n\n\n[1] 0.4002049\n\ncov(y02$TOC,y02$TS)\n\n\n[1] 0.4002049\n\nsd(y02$TOC); sd(y02$TS)\n\n\n[1] 1.156251\n[1] 0.7989956\n\ncov(y02$TOC,y02$TS)/(sd(y02$TOC)*sd(y02$TS))\n\n\n[1] 0.4331975\n\ncor(y02$TOC,y02$TS)\n\n\n[1] 0.4331975\n\ncor.test(y02$TOC,y02$TS)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  y02$TOC and y02$TS\nt = 5.3088, df = 122, p-value = 5.025e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.278124 0.566263\nsample estimates:\n      cor \n0.4331975 \n\nVisualización de Correlación entre variables\n\n\nif(!require(PerformanceAnalytics)){install.packages(\"PerformanceAnalytics\")\n  library(\"PerformanceAnalytics\")\n}\n\n\n\n\n\nchart.Correlation(X[,9:16],\n                  method=\"pearson\",\n                  histogram=TRUE,\n                  pch=16)\n\n\n\n\n\n\n\n",
      "last_modified": "2022-03-31T12:35:56-03:00"
    },
    {
      "path": "index.html",
      "title": "Talleres UPWELL: ciencia abierta, análisis datos y metadatos en investigación reproducible",
      "description": "Bienvenidxs a la website del taller sobre manejo de datos del Núcleo Milenio UPWELL. `Espero que lo disfruten!`\n",
      "author": [
        {
          "name": "Dra. Eugenia Gayo",
          "url": "http://www.upwell.cl/web/biogeoquimica-de-humboldt/"
        },
        {
          "name": "Dra. Carola Flores",
          "url": "http://www.upwell.cl/web/interaccion-humano-ambiente/"
        },
        {
          "name": "Dr. Bernardo Broitman",
          "url": "http://www.upwell.cl/web/ecologia-de-humboldt/"
        },
        {
          "name": "Dr. Carlos Lara",
          "url": "https://www.upwell.cl/web/investigadores-jovenes/"
        },
        {
          "name": "Dr. Matías Frugone-Álvarez.",
          "url": "https://matfrugone.netlify.app"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nBienvenidxs\nPrograma de los talleres\nInstall Party!\nMatinal\nVespertino\n\nWorkshop Cero: introducción a la investigación abierta reproducibles\nMatinal\nVespertino\n\nWorkshop 1: R con Google Earth Engine (GEE)\nSesión Uno\nMatinal\nActividades\n\nSesión Dos\nVespertino\nActividades\n\n\nWorkshop 2 UPWELL: investigación reproducible en Arqueología, Paleoecología, Paleoclimatología y Ecología\nSesión Uno\nMatinal\nActividades\n\nSesión Dos\nVespertino\nActividades\n\n\nWorkshop 3 UPWELL: investigación multidisciplinaria integrativa en surgencias oceanográficas\nActividades\n\nPre-requisitos\nEsencial\nRecomendado\n\nLinks\nIntroducción a R (Slides)\n\n\nBienvenidxs\nGracias por asistir a este curso de uso, manipulación y análisis de bases de datos y meta-datos del proyecto UPWELL\nDiseñamos una serie de talleres prácticos para introducir a un grupo diverso de estudiantes y científicos, jóvenes y no tan jóvenes, para utilizar y aprovechar el poder de los repositorios de datos abiertos en línea, junto con las herramientas computacionales y analíticas necesarias para ello.\n\nPrograma de los talleres\nInstall Party!\nResponsable Matías Frugone (email) (27 de Mayo 2022 via Zoom)\nMatinal\n(9.00 am)\nPara los asistentes que no están familiarizados con R/Rstudio/Git, no tienen instalado los programas y necesitan configurar una cuenta en GitHub:\nInstalar Git y crear una cuenta en GitHub.\nInstalar R y Rstudio\nVespertino\n(2.30 pm)\nInstalar Python.\nWorkshop Cero: introducción a la investigación abierta reproducibles\n(Viernes 3 de Junio. Presencial PUC San Joaquín Santiago)\nMatinal\n(9.00 am)\nCharla de bienvenida (15 min)\nConceptos básicos de investigación abierta (45 min)\nInvestigación reproducible y análisis de datos.\nAcceso abierto a los datos e investigaciones publicadas.\nLicencias y formatos de archivo.\nPlataformas de colaboración.\nRevisión abierta por pares y las métricas.\nPolíticas de ciencia abierta\n\nCoffee Break (15 min)\nIntroducción a Git y GitHub (90 min)\nGit\nSet up GitHub y RStudio\n\nAlmuerzo (1.00-2.30 pm)\nVespertino\n(2.30 pm)\nGit/GitHub con R y introducción a RMarkdown (45 min)\nRStudio con Git\nRMarkdown\n\nCoffee Break (15 min)\nWorkflow I (45 min)\nData types, structures and classes\nTidy data: introducción a tidyverse packages\nIntroducción a Data visualization: ggplot2 package\nIntroducción a Exploratory Data Analysis (EDA) in R\n\nCoffee Break (15 min)\nWorkflow II (75 min)\nCompendios de Investigación\n\nPalabras de clausura (15 min)\nWorkshop 1: R con Google Earth Engine (GEE)\n(11 de Agosto, UCSC Concepción presencial para estudiantes de postgrado, número de cupos=12)\nResponsable carlos.lara@ucsc.cl\nSesión Uno\nMatinal\nObjetivo: permitir que lxs estudiantes puedan conectar su instalación de R con Google Earth Engine (GEE), para descargar y visualizar imágenes de interés.\nTarget group: Estudiantes, investigadorxs y público en general que desee realizar análisis en percepción remota usando Google Earth Engine desde R.\nActividades\nInstalar/configurar Python desde Conda (requisito para usar GEE desde R).\nInstalar paquetes de R necesarios.\nActivar conexión a GEE desde R.\nDescripción de elementos y estructura de datos en R.\nBuscar y solicitar imágenes.\nVisualizar imágenes de manera interactiva.\nTarget Datasets: No tiene\nRequisites: R/Rstudio, Conda, una cuenta de Google Earth Engine activada. Nociones basicas de R.\nSesión Dos\nVespertino\nObjetivo: permitir que lxs estudiantes puedan realizar análisis básicos sobre imágenes, tales como gráficos y visualizaciones, índices y transformaciones lineales, uso de kernels sobre la imagen, y automatización de procesos.\nTarget group: estudiantes, investigadorxs y público en general que desee realizar análisis en percepción remota usando Google Earth Engine desde R.\nActividades\nExtracción de datos desde la imagen.\nGráficos de línea/puntos sobre la imagen (series de tiempo).\nCarga y uso de información vectorial sobre archivos raster.\nGeneración de índices espectrales.\nAplicación de diferentes kernels sobre la imagen.\nAutomatización básica del flujo de trabajo.\nTarget Datasets: No tiene\nRequisitos: Rstudio y GEE conectado.\nWorkshop 2 UPWELL: investigación reproducible en Arqueología, Paleoecología, Paleoclimatología y Ecología\nSesión Uno\n(12 Agosto. UCSC Concepción presencial para estudiantes de postgrado, número de cupos=12)\nMatinal\nObjetivo: entregar a lxs investigadorxs y estudiantes herramientas para que comprendan, adopten y utilicen la versatilidad de las bases de datos abiertas distribuidas globalmente en Arqueología, Paleoecología, Paleoclimatología y Ecología.\nTarget group: a toda la comunidad vinculada al núcleo milenio UPWELL, particularmente estudiantes jóvenes y investigadores de carrera temprana (ECR)\nActividades\nIntroducción a las base de datos y repositorio de acceso abierto (Zenodo, GitHub, Dryad, OSF, figshare, etc)\nEjemplos de bases de datos utilizadas en arqueología, paleoecológico, paleoclimatología y proyectos ecológicos (P3k14c, Pangea, NOAA, Neotoma, Gnip, Gnir, EML, WHOI, WOD, IODE, etc.)\nUploading your data: edición de metadata, estructura de datos, generación de DOI para datos, etc.\nDownloading the data: la interface de Rstudio y Jupyter\nTarget Datasets: GitHub de UPWELL\nSesión Dos\nVespertino\nObjetivo: introducir a un grupo diverso de estudiantes y ECR en el uso de los repositorios de datos abiertos en investigación centrada en las bases de datos arqueológicas, paleocológicas, paleoclimatológicas y ecológicas.\nTarget group: a toda la comunidad vinculada al núcleo milenio UPWELL, particularmente estudiantes jóvenes, estudiantes de magíster de los programas nacionales de Ciencias Marinas, Ecología y Arqueología\nActividades\nUtilizando bases de datos en línea\nBuscar, descubrir y descargar bases de datos en línea\nDiagramas y análisis básicos, y no tan básicos, usando R, Matlab, Python\nTarget Datasets: El UPWELL GitHub + Conjuntos de datos disponibles públicamente de interés para los participantes relacionadas a las temáticas del núcleo.\nRequisitos: R, Rstudio, Python y Git instalados.\nWorkshop 3 UPWELL: investigación multidisciplinaria integrativa en surgencias oceanográficas\n(18 y 19 de Agosto)\nObjetivo: presentar los conjuntos de datos de Upwell y nuestros avances preliminares a una audiencia nacional e internacional. Incluye conferencias de clase mundial sobre el uso de flujos de datos interdisciplinarios para la investigación científica para comprender la co-evolución entre los sistemas sociales y biofísicos, particularmente en las regiones de surgencias marinas, junto con sus impactos locales y duraderos.\nTarget group: la comunidad de UPWELL junto con los principales investigadores de otros centros nacionales e internacionales (People3000, Neotoma, Hope project, Archaeoglobe, Marum)\nActividades\nFocus Group sobre bases de datos en línea: pasado, presente y futuro\nComunidades de base de datos emergentes en línea y síntesis.\nScripts avanzados y análisis\nTarget Datasets: El UPWELL GitHub + Conjuntos de datos disponibles públicamente de interés para los participantes relacionadas a las temáticas del núcleo.\nRequisitos: conocimientos sobre R, Rstudio, Python y Git.\nPre-requisitos\nEsencial\nInstalar la última version de Zoom.\nInstalar la última versión del Sofware R.\nInstalar la última versión de RStudio.\nInstalar Python > 3.8.\nInstalar Conda.\nInstalar la última version de Git.\nCrear una cuenta en GitHub.\nÚnase a una sesión de verificación (Install Party) de tecnología previa al curso; los detalles se encuentran en el correo electrónico previo al curso.\nRecomendado\nConfigure su computadora portátil con lo siguiente:\nEl día de la clase, le proporcionaremos un enlace a un proyecto de GitHub que contiene todos los materiales del curso.\nAlgunos de los R packages que vamos a utilizar;\nR packages\n\n\ninstall.packages(c(\"tidyverse\",\"devtools\", \"tinytex\", \"rmarkdown\", \"usethis\", \"here\", \"neotoma\"))\n\n\n\nUna vez que tinytex está instalado, utilícelo para instalar una instalación mínima de LaTeX:\n\n\ntinytex::install_tinytex()\n\n\n\nAlgunos de estos paquetes son grandes, por lo que es mejor instalarlos antes del curso. Si tiene algún problema de instalación, hable con nosotrxs antes del curso o durante la próxima pausa para el café.\nUsaremos los softwares mencionados anteriormente solo como una copia de seguridad importante en caso de que haya problemas con la conexión del servidor del aula.\nNos vemos en los talleres!!,\nMatías F-Á\nLinks\nIntroducción a R (Slides)\n13:30 Introducción a R\n\n\n\n",
      "last_modified": "2022-03-31T12:35:57-03:00"
    },
    {
      "path": "install.html",
      "title": "Guía de instalación",
      "description": "Una guía rápida de instalación de las distintas herramientas para el taller UPWELL\n",
      "author": [
        {
          "name": "Matías Frugone Álvarez",
          "url": "https://matfrugone.netlify.app"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nGuía de instalación del Software R, RStudio y Git\n1. Introducción\n2. Instalar R\n2.1 Instalar R en Ubuntu\n2.2 Instalar R en Windows\n2.3 Instalar R en Mac\n\n3. Instalar RStudio\n3.1 Instalar RStudio en Ubuntu\n3.2 Instalar RStudio en Windows\n3.3 Instalar RStudio en Mac OS\n3.4 Entorno de trabajo de RStudio\n\n4. Instalar Git\n4.1 ¿Qué es Git?\n4.2 Cómo instalar Git en Ubuntu\n4.3 Instalar Git para Windows\n4.4 Instalar Git para MAC\n\n5. Bonus Track\n5.1 LaTeX (basico) para R Markdown\n5.2 Instalación\n\n\n\nGuía de instalación del Software R, RStudio y Git\n1. Introducción\nEl objetivo de esta guía es detallar el proceso de instalación de R y su IDE), RStudio, y familiarizar al usuario con el entorno de trabajo que proporciona RStudio.\n2. Instalar R\nPara instalar R nos dirigiremos a la página web de R project. Para ello haremos click en el siguiente enlace: http://www.r-project.org.\n\nPara descargar el software haremos click en CRAN y luego sobre el enlace del “espejo” (mirror) más próximo a nuestra ubicación.\n\nLuego debemos seleccionar la versión de R para el sistema operativo que esté utilizando, Windows o Mac OS\n\n2.1 Instalar R en Ubuntu\nPaquete para la actual R 4.1. release * están disponibles para la mayoría de las versiones de escritorio estables de Ubuntu hasta su fecha de finalización oficial. Sin embargo, solo la última versión de Long Term Support (LTS) es totalmente compatible. A partir del 19 de mayo de 2021, las versiones compatibles son:\nHirsute Hippo (21.04, amd64 only)\nGroovy Gorilla (20.10, amd64 only),\nFocal Fossa (20.04; LTS and amd64 only),\nBionic Beaver (18.04; LTS), and\nXenial Xerus (16.04; LTS).\nTenga en cuenta que para instalar paquetes de R 4.xx, se necesita una entrada nueva y diferente sources.list. Consulte los detalles a continuación.\nPara versiones anteriores de R, consulte el archivo corresponding README.\nPaquetes CRAN adicionales\nPara paquetes binarios adicionales para R (actualmente más de 4000+), consulte los diferentes PPA de CRAN2deb4ubuntu. Para R 4.1. *, Esto es https://launchpad.net/~c2d4u.team/+archive/ubuntu/c2d4u4.0+\nEl repositorio ‘c2d4u’ solo está disponible para las versiones LTS. Si desea intentar usar el repositorio con una versión que no sea LTS, puede editar manualmente la ‘c2d4u_team-ubuntu-c2d4u4_0 _- *. List’ para usar focal en lugar de la versión prevista. Este uso del repositorio ‘c2d4u’ no es compatible. Se recomienda encarecidamente una versión LTS para utilizar el repositorio ‘c2d4u’.\nInstalación\n\n# update indices\nsudo apt update -qq\n# install two helper packages we need\nsudo apt install --no-install-recommends software-properties-common dirmngr\n# add the signing key (by Michael Rutter) for these repos\n# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc \n# Fingerprint: 298A3A825C0D65DFD57CBB651716619E084DAB9\nwget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc\n# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed\nsudo add-apt-repository \"deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/\"\n\nPara obtener los últimos paquetes de R 4.x, agregue una entrada como\n\n\ndeb https://cloud.r-project.org/bin/linux/ubuntu hirsute-cran40/\n\no\n\n\ndeb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\n\no\n\n\ndeb https://cloud.r-project.org/bin/linux/ubuntu groovy-cran40/\n\no\n\n\ndeb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/\n\no\n\n\ndeb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran40/\n\nEn su archivo /etc/apt/sources.list. Al utilizar https://cloud.r-project.org, se le redirigirá automáticamente a un espejo CRAN cercano. Consulte https://cran.r-project.org/mirrors.html para obtener la lista actual de espejos CRAN.\nPara instalar el sistema R completo, use:\n\n\nsudo apt-get update\nsudo apt-get install r-base\n\nUsuarios que necesitan compilar paquetes R desde la fuente [p. Ej. los mantenedores de paquetes, o cualquier persona que instale paquetes con install.packages ()] también debe instalar el paquete r-base-dev:\n\n\nsudo apt-get install r-base-dev\n\nPor lo demás, los paquetes R para Ubuntu se comportan como los de Debian. Se puede encontrar información adicional en el archivo README de Debian ubicado en https://cran.R-project.org/bin/linux/debian/.\nLa instalación y compilación de R o algunos de sus paquetes pueden requerir paquetes de Ubuntu de los repositorios ‘backports’. Por lo tanto, se sugiere activar los repositorios de backports con una entrada como:\n\n\ndeb https://<my.favorite.ubuntu.mirror>/ focal-backports main restricted universe\n\nen su archivo /etc/apt/sources.list. Consulte https://launchpad.net/ubuntu/+archivemirrors para ver la lista de espejos de Ubuntu.\nUsando apt-key\nLos archivos de Ubuntu en CRAN están firmados con la clave “Michael Rutter marutter@gmail.com” con el ID de clave 0x51716619e084dab9. Para agregar la clave a su sistema con un comando, use (gracias a Brett Presnell por la sugerencia):\n\n\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\n\nSe puede utilizar un método alternativo recuperando la clave con\n\n\ngpg --keyserver keyserver.ubuntu.com --recv-key E298A3A825C0D65DFD57CBB651716619E084DAB9\n\ny luego alimentarlo a apt-key con\n\n\ngpg -a --export E298A3A825C0D65DFD57CBB651716619E084DAB9 | sudo apt-key add -\n\nAlgunas personas han informado de dificultades para utilizar este enfoque. El problema generalmente está relacionado con un firewall que bloquea el puerto 11371. Si el primer comando gpg falla, puede intentarlo (gracias a Mischan Toosarani por el consejo):\n\n\ngpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\n\ny luego alimentarlo a apt-key con\n\n\ngpg -a --export E298A3A825C0D65DFD57CBB651716619E084DAB9 | sudo apt-key add -\n\nOtro enfoque alternativo es buscar la clave en http://keyserver.ubuntu.com:11371/ y copiar la clave en un archivo de texto sin formato, digamos key.txt. Luego, ingrese la clave a apt-key con\n\n\nsudo apt-key add key.txt\n\n2.2 Instalar R en Windows\nAl hacer clic sobre “Download R for Windows” seremos dirigidos a la página que se reproduce a continuación. Allí haremos clic sobre install R for the first time.\n\nEn la siguiente ventana, haremos clic sobre Download R 4.1.1 for Windows y guardar el archivo de instalación.\n\nLuego, ejecutaremos el archivo descargado para proceder a la instalación de R y seguiremos las instrucciones del ejecutable.\n¿Cómo actualizar la instalación de R en Windows?\nPaso 1: Verifique su versión de instalación existente dirigiéndose a RStudio y escribiendo la versión en la consola. Esto debería darle la información sobre sus versiones principales y secundarias instaladas de R. Algo como esto:\n\n\nversion\n\n\n\nPaso 2: Dirígete a RGui (recuerda que no vayas a RStudio, busca RGui en el menú de inicio de Windows). Instale y cargue un paquete llamado installr, usando estos comandos:\n\n\n# Install the *installr* package\ninstall.packages(\"installr\")\n  \n# Load the package\nlibrary(\"installr\")\n\n\n\nPaso 3: Simplemente ejecute el comando installr :: updateR () y espere a que aparezca el cuadro de diálogo de información.\n\n\n# The below command will check your \n# installed version against the latest \n# version available and will show you \n# an information dialogue box\ninstallr::updateR()\n\n\n\n\nPaso 4: navegue por todos los procedimientos de instalación como se muestra a continuación:Paso 4.1: Si desea mantenerse libre de spam, presione No\n\nPaso 4.2: haga clic en Sí, si desea actualizar su versión de instalación de R\n\nPaso 4.3: A menos que tenga una instalación nueva y limpia, definitivamente haga clic en Sí\n\nPaso 4.4: si no estaba trabajando en proyectos de producción en ese momento, presione No.\n\nPaso 4.5: Esto está relacionado con RShiny. Haga clic en Sí.\n\nPaso 4.6: Aunque los paquetes deberían tener compatibilidad con versiones anteriores, haga clic en Sí.\n\nPaso 5: Una vez realizada toda la instalación, cierre su RGui y regrese a RStudio y vuelva a ejecutar la versión del comando para verificar si su instalación de R se ha actualizado o no.\n\n2.3 Instalar R en Mac\nLo primero es descargar el software, para ello haremos clic sobre Download R for (Mac) OS X y se nos dirigirá a la página que se reproduce más abajo. Luego, haremos clic sobre la versión de R en función de la versión del OS de cada uno.\nInstalar la versión 4.1.1 de R para Mac OS 10.13Para descargar haremos click sobre R-4.1.1.pkg y guardaremos el archivo de instalación para luego ejecutarlo e instalar R.\nupdateR : actualice su versión R en un abrir y cerrar de ojos (en una Mac)\nLa función de recuperación de paquetes previamente instalada está disponible actualmente solo si se inicia udpater desde base R en lugar de IDE como Rstudio. La función de recuperación de paquetes previamente instalada está en modo beta y es posible que deba volver a instalar manualmente sus paquetes después de actualizar la versión R. Gracias a Dios son gratis :)\nInstalación\nupdateR no está actualmente en CRAN. Para instalarlo, puede usar el paquete devtools:\n\n\ninstall.packages(\"devtools\")\n\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\n\n\n\nUso\nPara actualizar R, simplemente ejecute updateR (). Se le pedirá que ingrese la contraseña de administrador en el proceso. La función mostrará la versión a la que se actualizó R cuando finalice.\n\n\nupdateR(admin_password = \"os_admin_user_password\")\n\n\n\nes decir, solo tendrá que proporcionar la contraseña de usuario administrador. Esta contraseña es necesaria porque algunos de los comandos ejecutados por updateR () se ejecutan como superusuario (para lectores avanzados estamos hablando de nuestro viejo amigo ‘sudo’).\nAl final del proceso de instalación, deberían aparecer esas dos líneas:\neverything went smoothly open a Terminal session and run ‘R’ to assert that latest version was installed\n3. Instalar RStudio\nUna vez instalado R e instalado\nRStudio es un entorno de desarrollo integrado para el lenguaje de programación R, dedicado a la computación estadística y gráficos. Incluye una consola, editor de sintaxis que apoya la ejecución de código, así como herramientas para el trazado, la depuración y la gestión del espacio de trabajo.\nPrimero, debemos descargar RStudio desde su página web (https://rstudio.com/products/rstudio/download/) Allí seleccionamos la versión gratuita de RStudio Desktop\n\n3.1 Instalar RStudio en Ubuntu\nA través de la terminal\nPaso 1: Abra la terminal (Ctrl + Alt + T) en Ubuntu.\nPaso 2: actualice la caché de paquetes.\n\n\nsudo apt-get update\n\nPaso 3: Descarga de R Studio en Ubuntu\nInstale el paquete gdebi para instalar paquetes .deb fácilmente.\n\n\nsudo add-apt-repository universe\nsudo apt-get install gdebi-core\n\nPaso 4: Vaya a la página de descargas de R Studio y seleccione el último paquete * .deb disponible para Ubuntu 18 / Debian 10.\nPaso 5: Vaya a la carpeta Descargas en la máquina local.\n\n\n$ cd Descargas/\n$ ls\n rstudio-2021.09.0+351-amd64.deb\n\nPaso 6: instalar usando el paquete gdebi.\n\n\nsudo gdebi rstudio-1.2.5042-amd64.deb\n\n\nAlternativamente, RStudio también se puede instalar a través del software Ubuntu, pero el uso del enfoque anterior generalmente garantiza que se instale la última versión.\n3.2 Instalar RStudio en Windows\nLuego, haremos click en el botón de descarga. Automáticamente se decargará un ejecutable para instalar RStudio. Se requiere de Windows 7 o superior.\n3.3 Instalar RStudio en Mac OS\nLuego, haremos click en el botón de descarga. Automáticamente se decargará un ejecutable para instalar RStudio. Se requiere de Mac OS High Sierra o superior.\n3.4 Entorno de trabajo de RStudio\nAl abrir RStudio deberíamos ver una pantalla similar a lo que se muestra en la siguiente imagen:\nAspecto general de RStudioUna vez en RStudio, podemos escribir y ejecutar las órdenes de varias formas:\ndirectamente en la consola\na través de un script (.R)\ncon archivos Rmarkdown (.Rmd)\nComo podemos ver, RStudio está (normalmente) dividido en 4 paneles.\n4. Instalar Git\n4.1 ¿Qué es Git?\nGit es un sistema de control de versiones. Al ser un sistema de control de versiones, git hará un seguimiento de los archivos fuente que son necesarios para construir un proyecto que estemos editando (por ejemplo; un paper o proyecto de investigación). De tal manera que se se añade un fichero/repositorio (conjunto de archivos), se modifica o se borra, git guardará en un registro interno cada uno de los cambios. Esto permite poder consultar el estado del proyecto en una determinada fecha, pudiéndolo recuperar tal y como estaba, aunque se hubieran borrado ficheros. Que sea un sistema distribuido significa que cada copia del proyecto contiene todo el histórico completo, hasta el momento en que se hizo la copia.\n4.2 Cómo instalar Git en Ubuntu\nLa instalación de git en Ubuntu no puede ser más fácil. Sólo hay que abrir un terminal de comandos y ejecutar apt para que se descargue el paquete de los repositorios oficiales y configure el sistema para dejarlo disponible.\nPara ello instalaremos git y verificaremos que puede ejecutarse sin problemas:\n\n\nsudo apt install git\n\n# confirmación del comando\n\ngit --version\n\n4.3 Instalar Git para Windows\nSólo debe descargar el instalador correspondiente desde la página oficial del proyecto Git y descargar el instalador correspondiente al sistema operativo usado teniendo en cuenta la arquitectura de nuestro sistema: 32 o 64bits.\n\nEl instalador para Windows abrirá un asistente que mostrará una serie de opciones durante el proceso. No debe preocuparse y dejar las opciones marcadas por defecto que serán suficientes en la mayoría de las situaciones.\nUna vez terminado, puedes marcar la opción Iniciar Git Bash si quieres abrir una línea de comandos de Bash o si has seleccionado la línea de comandos de Windows que ejecuta Git desde la línea de comandos de Windows o utilizando el terminal en Rstudio. Compruebe la instalación ejecutando git de prueba con:\n\n\ngit --version\n\n4.4 Instalar Git para MAC\nPrimero te vas a este enlace, en la sección de Binary Installer, seleccionas la última versión indicada, en este ejemplo es la 2.33.0\n\nUna vez descargado en tu computadora, solo le das doble clic al archivo git-2.33.0-intel-universal-mavericks.dmg mostrado en la imagen de abajo. Se abrirá una carpeta con un archivo del mismo nombre, pero con extensión pkg, y lo abrimos.\nSi te sale el siguiente mensaje es porque la fuente de este paquete no está registrada como una fuente de confianza. Esto es una configuración predeterminada de macOS.\n\nPara brincarnos fácilmente esta configuración porque git realmente si es de confianza, basta con presionar Ctrl + Clic y seleccionamos abrir.\n\nAhora simplemente le decimos que efectivamente si lo queremos ejecutar presionando este otro botón abrir.\n\nYa dentro del instalador solo le decimos que continué hasta que termine la instalación.\n\nAhora verificamos en la terminal que Git está instalado, usando el comando git --version.\n\n\ngit --version\n\nY listo, con esto ya deberías tener git instalado en tu sistema operativo y poder trabajar en tus proyectos.\n5. Bonus Track\n5.1 LaTeX (basico) para R Markdown\nLatex es un sistema de composición de textos, orientado a la creación de documentos escritos que presenten una alta calidad tipográfica. Por sus características y posibilidades, es usado de forma especialmente intensa en la generación de artículos y libros científicos que incluyen, entre otros elementos, expresiones matemáticas.\nLaTeX está formado por un gran conjunto de macros de TeX, escrito por Leslie Lamport en 1984, con la intención de facilitar el uso del lenguaje de composición tipográfica, TEX, creado por Donald Knuth. Es muy utilizado para la composición de artículos académicos, tesis y libros técnicos, dado que la calidad tipográfica de los documentos realizados en LaTeX, se considera adecuada a las necesidades de una editorial científica de primera línea, muchas de las cuales ya lo emplean.\n5.2 Instalación\nVamos a instalar algunos paquetes de R para tener una version mínima de Latex que nos permitirá trabajar con R Markdown y hacer documentos dinamicos e introducirnos a la programación en Latex. Para realizar esto instale los siguientes paquetes:\nR Markdown\nR Markdown es un formato que permite una fácil creación de documentos, presentaciones dinámicas y informes de R. Markdown es un formato de sintaxis simple para crear documentos en HTML, PDF, y Word. En el siguiente link pueden encontrar información de como se crean estos documentos http://rmarkdown.rstudio.com.\n\n\ninstall.packages('rmarkdown', dependencies = TRUE)\nlibrary(rmarkdown)\n\n\n\n#### Knitr\nknitr una herramienta para generación de informes dinámico en R.​ Es un paquete en el lenguaje de programación estadístico R que permite integrar R en documentos LaTeX, LyX, HTML, Markdown, AsciiDoc, y reStructuredText. El propósito de knitr es dar espacio a la reproducibilidad de investigación en R a través de Programación Literaría. Está bajo la licencia GNU Licencia Pública General.\n\n\ninstall.packages(\"knitr\", dependencies = TRUE)\n\n\n\ndevtools package\nEl objetivo de devtools es facilitar el desarrollo de paquetes al proporcionar funciones R que simplifican y aceleran las tareas comunes. R Packages es un libro basado en este flujo de trabajo.\n\n\ninstall.packages('devtools')\ndevtools::install_github('rstudio/rmarkdown')\n\n\n\ntinytex package\nSi desea crear documentos PDF desde R Markdown, necesitará tener instalada una distribución LaTeX. Aunque hay varias opciones tradicionales que incluyen MiKTeX, MacTeX y TeX Live, recomendamos que los usuarios de R Markdown instalen TinyTeX.\nTinyTeX es una distribución LaTeX personalizada basada en TeX Live que tiene un tamaño relativamente pequeño, pero funciona bien en la mayoría de los casos, especialmente para los usuarios de R. La instalación o ejecución de TinyTeX no requiere privilegios de administrador de sistemas. Puede instalar TinyTeX con el paquete R tinytex (Xie 2021f):\n\n\ninstall.packages(\"tinytex\", dependencies = TRUE)\ntinytex::install_tinytex()\n\n\n\n\n\ndevtools::install_github('yihui/tinytex')\ntinytex::reinstall_tinytex() # reinstall it for a newer version\n\n\n\nTenga en cuenta que ‘tinytex’ se refiere al paquete R y ‘TinyTeX’ se refiere a la distribución LaTeX. Hay dos ventajas de usar TinyTeX:\nTinyTeX es liviano (en comparación con otras distribuciones de LaTeX), multiplataforma y portátil. Por ejemplo, puede almacenar una copia de TinyTeX en su unidad USB u otros dispositivos portátiles y usarla en otras computadoras con el mismo sistema operativo.\nCuando R Markdown se convierte a PDF, Pandoc convierte primero Markdown en un documento LaTeX intermedio. El paquete R tinytex ha proporcionado funciones auxiliares para compilar documentos LaTeX en PDF (la función principal es tinytex :: latexmk ()). Si usa TinyTeX y se requieren ciertos paquetes de LaTeX pero no están instalados, tinytex intentará instalarlos automáticamente por usted. También intentará compilar el archivo LaTeX una cantidad suficiente de veces para asegurarse de que se resuelvan todas las referencias cruzadas.\nSi está interesado en los detalles técnicos, puede consultar el artículo Xie (2019) y la página de preguntas frecuentes en https://yihui.org/tinytex/faq/.\n\n\n\n",
      "last_modified": "2022-03-31T12:36:01-03:00"
    },
    {
      "path": "neotoma.html",
      "title": "Análisis Demo de la base de datos NeotomaDB en Chile",
      "description": "Un repaso sobre la situación actual de las bases de datos del proyecto AbrocomaDB\n",
      "author": [
        {
          "name": "Matías Frugone-Álvarez",
          "url": "https://matfrugone.netlify.app"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nIntroduction\nFinding Data\nExplorer\nGetting Started\nSearch for Data\nTips and tricks before we start\nDownload Data\n\n\nWeb API- Application Programming Interface\nWhat is a Web API?\nMore about JSON\nMore on the Neotoma DB API\n\nThe neotoma Package\nFinding sites\nGetting Datasets\nGet_Download\n\nMulti-Site Analysis\n\nIntroduction\nThis workshop is intended to introduce individuals to different ways of analysing data stored in the Neotoma Paleoecology Database and the neotoma package for R.\nIntroduction to Neotoma Explorer for easy data exploration and extraction.\nTraining in the use of the Neotoma R package to archive, access, and analyze paleoecological data.\nNeotoma is a multiproxy paleo-database that stores a range of paleoecological & paleoenvironmental data. One of the strengths of Neotoma is the ability to compare different paleo-proxy data such as fossil pollen, diatoms, ostracodes, insects, charcoal, and geochemical data. In addition, the database is structured to allow the creation and storage of age models built on absolute dates derived from age control points and stratigraphic sections. Neotoma is a public-access, community-supported database that has emerged as the standard repository for Pliocene and Quaternary paleoecological data.\nMore teaching materials can be found in Neotoma’s educational resources.\nThis workshop is available on GitHub, in the NeotomaDB repository.\nFinding Data\nExplorer\nGetting Started\nGo to http://www.neotomadb.org/ and click on the ‘Explorer’ picture, or navigate directly to the Explorer App\nPan (by dragging), or change the zoom so that your window is centered on Chile.\nSearch for Data\nTips and tricks before we start\nShow/Hide Search Results\nWe will accumulate many search layers - it may be getting a bit confusing. Find the icon that lets you show/hide/combine search layers and use it to hide or delete some of your searches.\n\nRename searches\nSearches from the “Basic” search window are automatically named, but not “Advanced” searches.Add names for your searches as you go at the bottom of the Search dialog.\n\nFinding sites\nFind a known site\nUsing the Search dialog window (Metadata subtab;Collection type:Core;Database:Neotoma; Site Name), find “Laguna del Maule”.\nOnce you’ve performed the search, click on the point that appears. A window will pop up with some information about this record.\n\nExplore sites by geography\nUsing the Search dialog window, first choose “dataset type = Pollen” at the top\nThen, in the Space subtab, click “Search by extent”\nClick the “Extent” dropdown menu and search by shape, select the rectangle by using SHIFT+pointer, then draw a rectangle on the map in your chosen region of Chile (for example, South of Chile).\n\n\nFind all sites within a database Chile and the region has a rich history in paleoecological reseach of fossil pollen data. Let’s see how many are currently in Neotoma:\nSearch Window, Metadata subtab;Collection type: Core; Database field\nFind all sites within the Latin American Pollen Database.\nNot that many sites from the region are in Neotoma currently - only 36 datasets across 36 sites\n\nFind a Taxon\nSearch for a single taxon.\nSearch Window, select Dataset type: pollen, and use Taxon name\nFind all sites within the Latin American Pollen Database with Chenopodioideae records\n\nSearch for multiple taxa\nLet’s re-search for Chenopodioideae, but make sure we’ve included all relevant records.\n\nFind all charcoal and pollen records in the database\nSearch window, Dataset type = “Charcoal”\nSearch window, Dataset type = “Pollen”\nMulti-Taxon Search\nFind all sites with Chenopodioideae pollen between 10,000 and 500 years ago.\nFor Chenopodioideae, first click on “Dataset Type” = “pollen”\nThen use the Taxon Selection which you can use by clicking on the gears icon to the right of the ‘Taxon’ field in the ‘Search’ window.\nEnter ‘Taxa group’ = Vascular Plant, search for Casuarina, click the box next to Taxon to check all taxa, then uncheck taxa like “Myrica/Casuarina” or “Casuarina/Corylus”.\nThen click the ‘Abundance/density’ box and select >5%.\nFill in the desired age range, and choose records that ‘intersects result age range’.\nFinally, click ‘Search’\n\nFind all sites with Nothofagus between 10,000 and 500 years\nUse the ‘Advanced Taxon Selection’ which you can use by clicking on the gears icon to the right of the ‘Taxon’ field in the ‘Search’ window. b Enter ‘Taxa group’ = Vascular Plant, search for Nothofagus, click the box next to Taxon to check all taxa you want to include.\nSet a relative abundance filter if you’d like (click the ‘Abundance/density’ box and select >5%)\nFill in the desired age range, and choose records that ‘intersects result age range’.\nFinally, click ‘Search’\n\nYou can combine these two searches to find sites with either Casuarina OR Nothfagus, or restrict it to only those sites with both taxa.\nDownload Data\nFind the icon in the menu that indicates ’View search results in tables’and click on it.\nClick on the Save icon to the right. The dataset will be saved as a text file in CSV (comma separated value) format.\nOpen the downloaded CSV file in Excel or a text editor (e.g. Notepad, Wordpad) to look at it.\nWeb API- Application Programming Interface\nWhat is a Web API?\nSet of protocols for building tools and applications that use a specific web service\nOften a structure for URL/URI formulation to make a query on a web database, such as Neotoma, iDigBio, or the Paleobiology Database. + URL = Uniform Resource Locator, or web address. + URI = Uniform Resource Identifier, or web address of a service, like an API.\nCalls are usually sent as URL GET statements: values appended to a URL after a ? that are processed as parameters to be passed to the code running on the server. For example, we can think of http://google.com/?q=bananas as if it were an R function called search(), passed as search(q=\"bananas\").\nGoogle has APIs for most of its products. You could write an R (or Python, etc.) script that would connect to the Google Calendar API to allow you to automatically change events on your calendar or report agenda items back to you in your own custom environment. Hilary Parker has a nice example for adding sunsets to Google Calendar using R.\nAPIs exist for many important biological and paleobiological databases. We will work through a quick example from Neotoma. Different databases/services produce different kinds of API returns. The simplest kinds are comma delimited text files, but many APIs are now returning JSON documents.\nMore about JSON\nAt its most basic level, JSON transmits data objects in attribute-value pairs. It has come to replace XML, which was the previous standard for this sort of data transmission.\nJSON is composed of objects, enclosed by curly brackets, which may have any number of attributes named in quotes, with values after a colon, separated by commas. You may also present an array, or an ordered collection of values, enclosed in square brackets.\nLet’s search the Neotoma DB via the API for Casuarina. Here is the example API call:\nhttp://api.neotomadb.org/v1/data/sampledata?taxonname=Casuarina*\nNotice when you make this call that the JSON is computer-friendly but not human-friendly (though this depends on browser). Try it again with the ‘pretty’ format tag:\nhttp://api.neotomadb.org/v1/data/sampledata?taxonname=Casuarina*&format=pretty\nYou should be able to see the nested set of JSON objects, including the occurrences returned as comma-separated objects within \"data\".\nTry experimenting with the search, substituting different names.\nJSON is becoming the standard for data transfer in web services. R has several packages for dealing with JSON-formatted data. We will use some examples from the package RJSONIO. We will also use the package RCurl, which has functions to let you query APIs from within the R environment. The neotoma package is built around the newer httr package.\nMore on the Neotoma DB API\nBased on the Casuarina example, you can see that the example API call is reporting data from only part of the distributed database schema of Neotoma. In fact, the Neotoma API is designed around a set of different URLs, each of which allows a user to search a portion of the database. So, if you want the full Site information for locations with Casuarina present, you would have to search on Casuarina in the SampleData URI (as we did in the example), pull the DatasetID values from those returns, then search on the Dataset URI (http://api.neotomadb.org/v1/data/datasets) for those DatasetIDs, which would, in turn, produce the SiteIDs, which you would then search on the Sites URI (http://api.neotomadb.org/v1/data/sites). This sort of searching would be cumbersome if you were to do it by hand, but fortunately you can script a computer to do it for you. In fact, you don’t have to write the scripts to do it, because they have already been constructed and provided to the community as the R neotoma package.\nThe neotoma package will the the subject of our next module, but bear in mind that the other APIs also have wrapper packages to simplify data calls in R. The PaleoBioDB has a package, paleobioDB, and iDigBio has a package, ridigbio. The Earth-Life Consortium was aimed at creating a single API and wrapping R package to access both PaleoBioDB and Neotoma at the same time, as well as linking to many online museum databases and iDigBio. We wanted to introduce you to the underlying architecture here so you would understand what these packages are doing, and would know that you can crack them open and hack your own solutions if you cannot get them to give you the data or format of data that you need for your work.\nThe neotoma Package\nInstall the neotoma package, then add it to your programming environment\n\n\n# install.packages('devtools')\n# devtools::install_github('ropensci/neotoma')\n# Add the packages to your programming environment \nlibrary(neotoma)\n\n\n\nneotoma has three core commands: get_site, get_dataset, and get_download. The first two return metadata for sites and datasets; the latter returns data. See Goring et al. 2015 for a full description of the package and example code. This exercise is partially based on those examples.\nFinding sites\nWe’ll start with get_site. get_site returns a data.frame with metadata about sites. You can use this to find the spatial coverage of data in a region (e.g. using get_site with a bounding box), or to get explicit site information easily from more complex data objects. Use the command ?get_site to see all the options available.\nYou can easily search by site name, for example, finding “Laguna del Maule”, a site in central Chile.\n\n\nmaule_site <- get_site(sitename = 'Laguna del Maule%')\n\n\nThe API call was successful, you have returned  1 records.\n\nExamine the results\n\n\nprint(maule_site)\n\n\n        site.name      long       lat elev\n Laguna del Maule -70.50141 -36.05363 2160\nA site object containing 1 sites and 8 parameters.\n\nWhile maule_site is a data.frame it also has class site, that’s why the print output looks a little different than a standard data.frame. That also allows you to use some of the other neotoma functions more easily.\nBy default the search string is explicit, but because older sites, especially pollen sites entered as part of COHMAP, often had appended textual information (for example (CA:British Columbia)), it’s often good practice to first search using a wildcard character. For example, searching for “Marion” returns three sites:\n\n\n#results= \"hide\"\nmarion_site <- get_site(sitename = 'Marion%')\n\n\nThe API call was successful, you have returned  3 records.\n\n\n\nprint(marion_site)\n\n\n\nYou can also search by lat/lon bounding box. This one roughly corresponds to central Chile (A numeric vector c(lonW, latS, lonE, latN) representing the bounding box within which to search for sites. The convention here is to use negative values for longitudes west of Greenwich or longitudes south of the equator)\n\n\n#results= \"hide\"\nch_sites <- get_site(loc = c(-72, -35, -68, -31)) \n\n\nThe API call was successful, you have returned  1 records.\n\nYou can also search by geopolitical name or geopolitical IDs (gpid) stored in Neotoma. For a list of names and gpids, go to http://api.neotomadb.org/apdx/geopol.htm, or use the get_table(table.name = \"GeoPoliticalUnits\") command. This command works either with an explicit numeric ID, or with a text string:\n\n\n# get all sites in Chile (gpid=7956)\nCH_sites <- get_site(gpid = 825)\n\n\nThe API call was successful, you have returned  22 records.\n\n# get all sites in Wisconsin\nAR_sites <- get_site(gpid = \"Argentina\")\n\n\nThe API call was successful, you have returned  32 records.\n\ndata.frame stores vectors of equal length. The nice thing about a data.frame is that each vector can be of a different type (character, numeric values, etc.). In RStudio, you can use the Environment panel in upper right to explore variables.\nWe pointed out before that the object returned from get_site is both a data.frame and a site object. Because it has a special print method some of the information from the full object is obscured when printed. You can see all the data in the data.frame using str (short for structure):\n\n\nstr(maule_site)\n\n\n\nLet’s look at the description field:\n\n\nCH_sites$description\n\nAR_sites$description\n\n\n\nGetting Datasets\nThe structure of the Neotoma data model, as expressed through the API, is roughly: “counts within download, download within dataset, dataset within site”. So a dataset contains more information than a site, about a particular dataset from that site.\nA site may have a single associated dataset, or multiple. The Neotoma function get_dataset returns a list of datasets containing the metadata for each dataset. We can pass output from get_site (site metadata) to get_dataset, even if get_site returns multiple sites. For example:\n\n\nall_chill <- neotoma::get_dataset(gpid = 825)\n\n#Examine the results\n\nprint(all_chill)\n\n\nA dataset_list containing 114 objects:\nAccessed from 2022-03-31 12:36h to 2022-03-31 12:36h. \nDatasets:\n dataset.id                         site.name      long       lat\n         13 Aguas Calientes                   -67.40000 -23.08333\n         14 Aguas Calientes 2                 -67.58333 -23.50000\n         17 Ajata                             -69.20000 -18.25000\n        350 Caunahue                          -72.00000 -40.00000\n        362 Chepu                             -73.96667 -42.00000\n        488 Isla Clarence                     -71.23333 -54.20000\n        536 Cueva Milodon                     -72.63333 -51.58333\n       1575 La Esperanza                      -72.83333 -46.63333\n       1624 Lejía                             -67.68333 -23.48333\n       1880 Puerto Eden                       -74.41667 -49.13333\n       1958 Canal de la Puntilla              -72.90500 -40.95250\n       2339 San Pedro                         -73.95000 -42.25000\n       2635 Tempano Sur                       -74.03333 -48.73333\n       2665 Tumbre 1                          -67.78333 -23.31667\n       2666 Tumbre 2                          -67.78333 -23.31667\n       2674 Tuyajto                           -67.78333 -23.95000\n       3556 Canal de la Puntilla              -72.90500 -40.95250\n       3557 Canal de la Puntilla              -72.90500 -40.95250\n       7862 Aguas Calientes 2                 -67.58333 -23.50000\n       7865 Ajata                             -69.20000 -18.25000\n       7984 Caunahue                          -72.00000 -40.00000\n       8004 Isla Clarence                     -71.23333 -54.20000\n       8039 Cueva Milodon                     -72.63333 -51.58333\n       8289 La Esperanza                      -72.83333 -46.63333\n       8486 Puerto Eden                       -74.41667 -49.13333\n       8507 Canal de la Puntilla              -72.90500 -40.95250\n       8679 Tempano Sur                       -74.03333 -48.73333\n       8699 Tumbre 1                          -67.78333 -23.31667\n       8700 Tumbre 2                          -67.78333 -23.31667\n       8706 Tuyajto                           -67.78333 -23.95000\n       8836 Canal de la Puntilla              -72.90500 -40.95250\n      14292 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14293 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14294 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14295 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14300 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14301 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14302 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14303 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14304 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14305 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14306 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14307 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14311 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14312 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14313 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14314 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14315 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14316 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14317 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14318 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14319 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14320 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14321 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14322 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14323 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14324 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14325 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14326 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14327 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14328 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14329 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14330 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14331 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14332 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14333 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14334 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14335 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14336 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14337 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14338 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14339 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14340 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14341 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14342 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14343 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14344 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14345 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14346 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14347 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14348 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14349 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14350 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14351 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14352 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14353 Quebrada La Higuera Upper Middens -69.54445 -18.66160\n      14354 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14355 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14356 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14357 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14358 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14359 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14360 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14361 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14362 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14363 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14364 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14365 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14366 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14367 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      14368 Quebrada La Higuera Lower Middens -69.62372 -18.68048\n      15303 Rio Rubens Bog                    -71.87614 -52.03714\n      15304 Rio Rubens Bog                    -71.87614 -52.03714\n      15305 Rio Rubens Bog                    -71.87614 -52.03714\n      15306 Rio Rubens Bog                    -71.87614 -52.03714\n      15329 Mallin Pollux                     -71.83794 -45.68859\n      15330 Mallin Pollux                     -71.83794 -45.68859\n      15331 Mallin Pollux                     -71.83794 -45.68859\n      19815 Laguna del Maule                  -70.50141 -36.05363\n      19816 Laguna del Maule                  -70.50141 -36.05363\n      19817 Laguna del Maule                  -70.50141 -36.05363\n      19818 Laguna del Maule                  -70.50141 -36.05363\n      48620 Mallin Casanova                   -72.97522 -47.64356\n      48621 Mallin Casanova                   -72.97522 -47.64356\n              type\n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n pollen           \n loss-on-ignition \n pollen           \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n pollen           \n geochronologic   \n vertebrate fauna \n plant macrofossil\n geochronologic   \n plant macrofossil\n charcoal         \n pollen           \n geochronologic   \n charcoal         \n pollen           \n geochronologic   \n testate amoebae  \n pollen           \n diatom           \n geochronologic   \n pollen           \nNULL\n\nUse get.tables(‘GeoPoliticalUnits’) for a list of acceptable values, or link here: http://api.neotomadb.org/apdx/geopol.htm\n\n\nplot(all_chill)\n\n\n\n\nMake sure the leaflet package is installed using install.packages(‘leaflet’), and then let’s check out what we get:\n\n\nlibrary(leaflet)\n\n# We're going to use this multiple times I think, so let's make it a function:\n\nleaflet_map <- function(dataset_in) {\n  dataset_summary <- do.call(rbind, lapply(dataset_in, \n                        function(x){\n                          # here we pull out the site information from the `dataset` objects:\n                          data.frame(name = x$site.data$site.name,\n                                     lat  = x$site.data$lat + runif(1, -0.005, 0.005),\n                                     long = x$site.data$long + runif(1, -0.005, 0.005),\n                                     type = x$dataset.meta$dataset.type)\n                        }))\n  \n  # The leaflet package documentation uses piping.  For the sake of this tutorial, I won't.\n  # First, define a color palette for the dataset type symbol plotting.\n  pal <- colorFactor(\"Dark2\", domain = levels(dataset_summary$type))\n  \n  # Now make the leaflet map, add base raster tiles and then add the markers for the records:\n  map <- leaflet(data = dataset_summary)\n  map <- leaflet::addTiles(map)\n  map <- leaflet::addCircleMarkers(map, ~long, ~lat, \n                                   popup = ~paste0(\"Site: \", as.character(name), \"<br>\",\n                                                   \"Type: \", \n                                                   as.character(dataset_summary$type)),\n                                   color = ~pal(type),\n                                   stroke = FALSE, fillOpacity = 0.5)\n  # You need to explicitly call the `map` object to make it appear!\n  map\n}\n\n# Since that's all wrapped in a function, we can all it with any `dataset_list`:\nleaflet_map(all_chill)\n\n\n\n{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[-23.0789077522251,-23.4978768847976,-18.2478724708478,-39.9974576117587,-42.0036214151629,-54.2019744577282,-51.5846289281425,-46.6288844332745,-23.4880742888426,-49.130373443935,-40.9569198497059,-42.2546113535808,-48.7312716347183,-23.3185518563987,-23.3168453191087,-23.9467646326032,-40.9571832299582,-40.9533987401961,-23.4974702269724,-18.2503677860554,-40.0028680671053,-54.1971065058676,-51.58772897246,-46.6370703772566,-49.1343278978992,-40.9499146803864,-48.7319601305708,-23.3193771743128,-23.3133209498442,-23.9520521716611,-40.9567006723909,-18.6600138939087,-18.6592571332244,-18.6622369077368,-18.662660161395,-18.6626360179353,-18.6665249916151,-18.6601402167309,-18.6576533603397,-18.6610660957251,-18.6647814023433,-18.6643764271433,-18.6645033762752,-18.6590228600459,-18.666234646005,-18.6639068253091,-18.6614277928098,-18.6572848863326,-18.6601509818932,-18.6662592308232,-18.6604924783911,-18.660113988622,-18.6613008701484,-18.6603175874133,-18.6572916793599,-18.6626842421558,-18.665861461969,-18.6654769788574,-18.6617454662741,-18.6614600228596,-18.6591023167394,-18.6594561636899,-18.6585726066221,-18.6613070263699,-18.6597976663717,-18.6616555547327,-18.6619651298233,-18.6638273260006,-18.6596015452532,-18.6645608840751,-18.6573365906541,-18.6642148449653,-18.6608446072446,-18.6582497910512,-18.6583636721628,-18.6590099306599,-18.6625666492254,-18.6593476714831,-18.6661965806209,-18.6582487489291,-18.6656249674954,-18.6654335523964,-18.6645879116174,-18.6640819184421,-18.6637155726048,-18.6597593417726,-18.6824845677348,-18.6810772995058,-18.681491015159,-18.6818880899333,-18.683477792343,-18.6763540323976,-18.6806207605022,-18.6843750628353,-18.682958465001,-18.6836477743265,-18.6839408527863,-18.6765819058836,-18.6790449546966,-18.6766553500168,-18.6773982941163,-52.032507950357,-52.040886507063,-52.0336629039756,-52.041980797158,-45.6847527786304,-45.684357844962,-45.6875071254542,-36.0524840818115,-36.0546156862427,-36.0495845819407,-36.0581803755232,-47.6441039710943,-47.6391950928545],[-67.4016879278515,-67.5826469852653,-69.2041739534074,-71.9999288380053,-73.9685954436852,-71.2382314876857,-72.6337929229735,-72.8380602112733,-67.6866438117827,-74.4196567647863,-72.9037942796177,-73.9510177464597,-74.0359544220654,-67.7799029984669,-67.7796455445181,-67.7844661467307,-72.9073979398119,-72.9006157475663,-67.5825482716918,-69.2041817923542,-71.9981483366829,-71.2316531079117,-72.6299732866435,-72.8369414814742,-74.4199005449173,-72.9036027715728,-74.0355884020723,-67.7800951642817,-67.7835694806342,-67.7877564967278,-72.9022357564513,-69.5396263212308,-69.5485709384496,-69.5422250197496,-69.5405867428745,-69.5467976409703,-69.5462834858702,-69.5425721900322,-69.545510270241,-69.5401656146714,-69.5462152320536,-69.5476027074077,-69.5418679813592,-69.543851385223,-69.5394793215341,-69.5440196016774,-69.5483982455468,-69.5470059740304,-69.5442099597275,-69.5421671279257,-69.5394553019682,-69.5427261230855,-69.5483875945716,-69.5437456644227,-69.5443611433583,-69.5453541575994,-69.5427644860971,-69.5468698033311,-69.5413084568822,-69.5433162827877,-69.5460895037156,-69.548550716915,-69.5453381106391,-69.5451041574211,-69.5423052110703,-69.5404052890528,-69.5494365473528,-69.541992309002,-69.5411235345777,-69.5406756677705,-69.5462441669678,-69.5397624040295,-69.5439975453185,-69.5464795149507,-69.5406436767516,-69.5410466953873,-69.5434158573969,-69.548868674456,-69.5432967356237,-69.5420561124425,-69.5462811096751,-69.5469996783108,-69.5466774028696,-69.5485197548259,-69.5446323463827,-69.5402952813025,-69.6189937271189,-69.6277530402096,-69.6271581712702,-69.6223135426721,-69.6257997580955,-69.619022930361,-69.624565991942,-69.6199617734423,-69.6283992099819,-69.6285156928386,-69.6232843381503,-69.6245303397753,-69.6263573226972,-69.6218638046143,-69.62678814971,-71.8802602218435,-71.8732832676446,-71.8724184244493,-71.8763201230805,-71.8419099828616,-71.8382914556346,-71.835855695686,-70.5007557452743,-70.505523437098,-70.5047699943761,-70.5015817611775,-72.9750605190363,-72.9770284647638],10,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":false,\"color\":[\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E7298A\",\"#E6AB02\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#7570B3\",\"#66A61E\",\"#1B9E77\",\"#E6AB02\",\"#7570B3\",\"#1B9E77\",\"#E6AB02\",\"#7570B3\",\"#A6761D\",\"#E6AB02\",\"#D95F02\",\"#7570B3\",\"#E6AB02\"],\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E6AB02\",\"#E7298A\",\"#E6AB02\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#E6AB02\",\"#7570B3\",\"#666666\",\"#66A61E\",\"#7570B3\",\"#66A61E\",\"#1B9E77\",\"#E6AB02\",\"#7570B3\",\"#1B9E77\",\"#E6AB02\",\"#7570B3\",\"#A6761D\",\"#E6AB02\",\"#D95F02\",\"#7570B3\",\"#E6AB02\"],\"fillOpacity\":0.5},null,null,[\"Site: Aguas Calientes<br>Type: pollen\",\"Site: Aguas Calientes 2<br>Type: pollen\",\"Site: Ajata<br>Type: pollen\",\"Site: Caunahue<br>Type: pollen\",\"Site: Chepu<br>Type: pollen\",\"Site: Isla Clarence<br>Type: pollen\",\"Site: Cueva Milodon<br>Type: pollen\",\"Site: La Esperanza<br>Type: pollen\",\"Site: Lejía<br>Type: pollen\",\"Site: Puerto Eden<br>Type: pollen\",\"Site: Canal de la Puntilla<br>Type: pollen\",\"Site: San Pedro<br>Type: pollen\",\"Site: Tempano Sur<br>Type: pollen\",\"Site: Tumbre 1<br>Type: pollen\",\"Site: Tumbre 2<br>Type: pollen\",\"Site: Tuyajto<br>Type: pollen\",\"Site: Canal de la Puntilla<br>Type: loss-on-ignition\",\"Site: Canal de la Puntilla<br>Type: pollen\",\"Site: Aguas Calientes 2<br>Type: geochronologic\",\"Site: Ajata<br>Type: geochronologic\",\"Site: Caunahue<br>Type: geochronologic\",\"Site: Isla Clarence<br>Type: geochronologic\",\"Site: Cueva Milodon<br>Type: geochronologic\",\"Site: La Esperanza<br>Type: geochronologic\",\"Site: Puerto Eden<br>Type: geochronologic\",\"Site: Canal de la Puntilla<br>Type: geochronologic\",\"Site: Tempano Sur<br>Type: geochronologic\",\"Site: Tumbre 1<br>Type: geochronologic\",\"Site: Tumbre 2<br>Type: geochronologic\",\"Site: Tuyajto<br>Type: geochronologic\",\"Site: Canal de la Puntilla<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Upper Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Upper Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Upper Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Upper Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Lower Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Lower Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Lower Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Lower Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Lower Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Lower Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Lower Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Lower Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Lower Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Lower Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Lower Middens<br>Type: plant macrofossil\",\"Site: Quebrada La Higuera Lower Middens<br>Type: pollen\",\"Site: Quebrada La Higuera Lower Middens<br>Type: geochronologic\",\"Site: Quebrada La Higuera Lower Middens<br>Type: vertebrate fauna\",\"Site: Quebrada La Higuera Lower Middens<br>Type: plant macrofossil\",\"Site: Rio Rubens Bog<br>Type: geochronologic\",\"Site: Rio Rubens Bog<br>Type: plant macrofossil\",\"Site: Rio Rubens Bog<br>Type: charcoal\",\"Site: Rio Rubens Bog<br>Type: pollen\",\"Site: Mallin Pollux<br>Type: geochronologic\",\"Site: Mallin Pollux<br>Type: charcoal\",\"Site: Mallin Pollux<br>Type: pollen\",\"Site: Laguna del Maule<br>Type: geochronologic\",\"Site: Laguna del Maule<br>Type: testate amoebae\",\"Site: Laguna del Maule<br>Type: pollen\",\"Site: Laguna del Maule<br>Type: diatom\",\"Site: Mallin Casanova<br>Type: geochronologic\",\"Site: Mallin Casanova<br>Type: pollen\"],null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-54.2019744577282,-18.2478724708478],\"lng\":[-74.4199005449173,-67.4016879278515]}},\"evals\":[],\"jsHooks\":[]}\nGet_Download\nThe Neotoma function get_download() returns a list that stores a list of download objects - one for each retrieved dataset. Note that get_download() returns the actual (raw) data associated with each dataset, rather than a list of the available datasets, as in get_dataset() above. Each download object contains a suite of data for the samples in that dataset.\nUsing the get_download() will accept an object of class dataset (ie, tas_dataset), but also of class site (ie, lagoon_sites), since it will automatically query for the datasets associated in each site.\n\n\nCH_all <- get_download(CH_sites)\n#print(CH_all)\n\n\n\nThere are a number of messages that appear. These can be suppressed with the flag verbose = FALSE in the function call. One thing you’ll note is that not all of the datasets can be downloaded directly to a download objct. This is because geochronologic datasets have a different data structure than other data, requiring different fields, and as such, they can be obtained using the get_geochron() function.\n\n\n\nThe result is effectively the inverse of the first.\nGet the datasets for just El Maule (dataset 19817):\n\n\nmaule_pd <- get_download(19817)\n\n\n\nLet’s examine the available data in this download\n\n\nstr(maule_pd[[1]])\n\n\n\nThere are 6 associated fields:\ndataset\nsite.data\ndataset.meta\npi.data\nsubmission\naccess.date\nsite\n\nsample.meta\ntaxon.list\ncounts\nlab.data\nchronologies\nWithin the download object, sample.meta stores the core depth and age information for that dataset. We just want to look at the first few lines, so are using the head() function. Let’s explore different facets of the dataset\n\n\nhead(maule_pd[[1]]$sample.meta)\n#taxon.list stores a list of taxa found in the dataset\nhead(maule_pd[[1]]$taxon.list)\n#counts stores the the counts, presence/absence data, or percentage data for each taxon for each sample\nhead(maule_pd[[1]]$counts)\n\n\n\nHere we can get to the papers that published about a site of interest:\n\n\nget_publication(datasetid = 19817)\n\n\n\nMulti-Site Analysis\n\n\n\n",
      "last_modified": "2022-03-31T12:36:12-03:00"
    },
    {
      "path": "rgithub.html",
      "title": "Cómo usar Git/GitHub con RStudio",
      "description": "Este artículo es una traducción automática del artículo: https://rfortherestofus.com/2021/02/how-to-use-git-github-with-r/\n",
      "author": [
        {
          "name": "Matías Frugone Álvarez (modificado de David February 13, 2021)",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nCómo usar Git/GitHub con R\n1. ¿Qué es Git? ¿Qué es GitHub?\n¿Por qué debería usar Git y GitHub?\n\n2. Cómo configurar Git\n2.1 Configurar Git (Editar gitconfig file) desde Rstudio\n\n3. Conectar RStudio y GitHub\n3.1 Regístrate en GitHub\n3.2 Crear un token de acceso personal (PAT) en GitHub\n3.3 Almacenar token de acceso personal para conectar RStudio y GitHub\n\n4. Manual de sobreviviencia con Git y GitHub en RStudio\n4.1 Encuentre a Git usted mismo\n4.2 Dígale a RStudio dónde encontrar a Git\n4.3 Problemas y soluciones RStudio, Git, GitHub\n\n5. Inicializar un repositorio Git\n6. Ver historial de confirmación\n7. Haga una consolidación o confirmación (commit) y vea más historia\n8. Cómo conectar proyectos de RStudio con repositorios de GitHub\n8.1 RStudio Primero\n8.2 GitHub Primero\n\n9. Flujo de trabajo general\n9.1 Push (Subir a Github)\n9.2 Pull (Descargar desde Github)\n\n10. Colaborando con Git y Github\n10.1 Colaborando\n10.2 Branching\n\nMás información\n\n\nCómo usar Git/GitHub con R\nEl uso de Git y GitHub junto con RStudio tiene el poder de revolucionar la forma en que trabajas en R. Pero configurar todo puede ser un desafío.\n1. ¿Qué es Git? ¿Qué es GitHub?\nEn primer lugar, son dos cosas separadas:\nGit es un software de código abierto para el control de versiones. Utilizando Git, puedes hacer cosas como ver todas las versiones anteriores de código que has creado en un proyecto.\nGitHub es el servicio más popular (otros incluyen GitLab y BitBucket) para colaborar en código y archivos usando Git.\nEs posible usar Git sin usar GitHub, aunque la mayoría de la gente combina los dos. Poder tener un registro de todos los cambios que ha realizado en su código tanto localmente como en un sitio web remoto es poderoso.\n¿Por qué debería usar Git y GitHub?\nEl uso de Git y GitHub sirve como copia de seguridad.\nEl uso de Git y GitHub te permite usar el control de versiones\nEl uso de Git y GitHub permite trabajar en el mismo proyecto al mismo tiempo que los colaboradores.\n2. Cómo configurar Git\nAhora que tienes un poco más de comprensión de lo que son Git y GitHub, hablemos de cómo configurar todo. Gran parte de lo que compartiré proviene del excelente libro Happy Git with R de Jenny Bryan y Jim Hester. Sin embargo, en el momento de escribir este artículo (febrero de 2021), algunas cosas han cambiado con respecto a las credenciales. Adorno lo que creo que es el consejo más actualizado para configurar todo.\n2.1 Configurar Git (Editar gitconfig file) desde Rstudio\nPrimero abrímos un nuevo proyecto de Rstudio para configurar Git y Github\nEl siguiente paso es configurar Git. Esto se trata en el Capítulo 7 de Happy Git with R, aunque muestro lo que creo que es un proceso un poco más fácil. Específicamente, sugiero usar la función edit_git_config() del paquete usethis, que abrirá su archivo gitconfig. Agregue su nombre y correo electrónico y cierre esto\nEn la consola de RStudio:\n\n\ninstall.packages(usethis) #instala el paquete usethis\n\nlibrary(usethis)\nusethis::edit_git_config(user.name = \"TU_NOMBRE_USUARIO\", user.email = \"TU@mail.com\")\n# Modificar en el fichero \".gitconfig\" los apartados: \"name\" y \"email\" \n# y guardar el fichero\n#Pegar en \".gitconfig\"\n\n#[filter \"lfs\"]\n#    clean = git-lfs clean -- %f\n#    smudge = git-lfs smudge -- %f\n#    process = git-lfs filter-process\n#    required = true\n#[user]\n#  name = minombredeusuario\n#  email = micorreo@gmail.com\n#[credential]\n#  helper = cache\n\n\n\n3. Conectar RStudio y GitHub\nEl proceso hasta ahora nos ha permitido usar Git localmente. Pero, ¿qué pasa si queremos conectarnos a GitHub? ¿Cómo lo hacemos?\n3.1 Regístrate en GitHub\nEl primer paso es registrarse para obtener una cuenta (gratuita) de GitHub.\n3.2 Crear un token de acceso personal (PAT) en GitHub\nUna vez que se haya registrado, deberá habilitar RStudio para hablar con GitHub. El proceso para hacerlo ha cambiado recientemente (aquí es donde veo la mayor diferencia importante con Happy Git con R). La mejor manera de conectar RStudio y GitHub es usando su nombre de usuario y un token de acceso personal (PAT). Para generar un token de acceso personal, use la función create_github_token() de usethis. Esto lo llevará a la página correspondiente en el sitio web de GitHub, donde le dará un nombre a su token y lo copiará (¡no lo pierda porque nunca volverá a aparecer!).\nEn la consola de RStudio:\n\n\nlibrary(usethis)\nusethis::create_github_token()\n\n\n\nPulsar sobre el enlace que aparece en la salida en la consola.\nAbrirá una página web de Github en la que se tendrá que pulsar el botón “Generate token”.\nCopiar el token que aparece en Github (luego se utilizará en el siguiente paso).\n3.3 Almacenar token de acceso personal para conectar RStudio y GitHub\nAhora que ha creado un token de acceso personal, debemos almacenarlo para que RStudio pueda acceder a él y sepa conectarse a su cuenta de GitHub. La función gitcreds_set() del paquete gitcreds te ayudará aquí. Ingresará su nombre de usuario de GitHub y el token de acceso personal como contraseña (NO su contraseña de GitHub, como pensé inicialmente). Una vez que haya hecho todo esto, ¡habrá conectado RStudio a GitHub!\nEn la consola de RStudio:\n\n\ninstall.packages(\"gitcreds\")\nlibrary(gitcreds)\ngitcreds::gitcreds_set()\n# Ante la pregunta: \"Enter password or token\"\n# introducir el token copiado en el paso anterior\n\n\n\nY/O guarda el token en .Renviron\n\n\nusethis::edit_r_environ()\n\n#  GITHUB_TOKEN=\"MI_TOKEN\"\"\n\n\n\nReinicia R y verifica la configuración.\n\n\nusethis::git_sitrep()\n\n\n\nSi todo ha salido bien salte al apartado 5 del manú\n4. Manual de sobreviviencia con Git y GitHub en RStudio\nErick Cuevas-Fernández\n10 de agosto de 2021\nEste documento se basa en “Happy Git with R” de Jenny Bryan y los STAT 545 TAs, Jim Hester\n4.1 Encuentre a Git usted mismo\nRStudio sólo puede actuar como un GUI front-end para Git, si Git se ha instalado correctamente RStudio puede encontrarlo.\nUna prueba básica para la instalación exitosa de Git es simplemente introducir git en el shell. Si recibe una queja sobre que Git no se encuentra, significa que la instalación no tuvo éxito o que no se encuentra, es decir, no está en su PATH.\nPor cualquier problema con la conexión entre RStudio y Git, siempre ten en cuenta la ubicación de dónde se instaló Git.\nPuedes usar en la terminal which git (Mac y Linux)\nO bien usar en la terminal where git (Windows)\nRecuerda que la terminal (o línea de comandos ó consola ó shell ó bash) es un programa en tu computadora que funciona para correr otros programas. Desde RStudio puedes abrir la terminal, lo cual es muy conveniente si estás trabajando en un proyecto. Puedes abrir una terminal con:\nTools > Terminal (abre la terminal dentro del IDE de RStudio)\nTools > Shell(abre una terminal externa a RStudio)\n\nLa recomendación actual de GitHub es usar HTTPS porque es la manera más fácil de configurar y tiene operabilidad en multiples redes y plataformas.\nEs menos probable que HTTPS sea bloqueado por un firewall.\nUna conexión HTTPS permite que credential.helper almacene en caché su contraseña. (por tanto puedes configurar tu usuario y contraseña en tu equipo de uso)\nEs más sencillo acceder a un repositorio desde cualquier lugar, ya que solo necesita los detalles de su cuenta (no se requieren claves SSH) para escribir en el repositorio.\n\nUsualmente cuando inicies un proyecto colaborativo con GitHub inicializa el repositorio con un README. Copia el HTTPS URL para clonar el repositorio en la terminal git clone https://github.com/TU-USUARIO/\n4.2 Dígale a RStudio dónde encontrar a Git\nSi Git parece estar instalado y se puede encontrar, inicie RStudio. Salga y vuelva a iniciar RStudio si hay alguna duda sobre si abrió RStudio antes o después de instalar Git. HÁGALO.\nDesde RStudio, vaya a Tools> Global Options> Git/SVN y asegúrese de que la casilla * Git executable * apunte a … el ejecutable de Git. Debe leer algo como:\n/usr/bin/git (Mac, Linux)\nC:/Program Files (x86)/Git/bin/git.exe (Windows)\nAquí hay un screenshot de alguien que hace esto en un computador con Linux.\n\nATENCIÓN: En Windows, NO use C:/Program Files (x86)/Git/cmd/git.exe. bin en el path está BIEN, ¡SÍ! cmd en el path está MAL, ¡NO!\nATENCIÓN: En Windows, NO use git-bash.exe. Algo que termine en git.exe está BIEN, ¡SÍ! git-bash.exe está MAL, ¡NO!\nA veces, se han tenido problemas para navegar hasta el directorio necesario en Mac OS, una vez que se ha hecho clic en “Browse” y trabajando con una ventana deL Finder. El atajo de teclado es “command + shift + g” invocará “Go To Folder”, donde podrá escribir o pegar cualquier ruta que desee.\nReinicie RStudio si realiza cambios. HÁGALO\nSiga los pasos de arriba para ver si RStudio y git se están comunicando ahora.\n¿No está contento?\nSe ha visto esta ayuda: con su Proyecto abierto, vaya a “Tools>Project Options …”. Si está disponible, haga clic en “Git/SVN” y seleccione “Git” en el menú desplegable Sistema de control de versiones. Responda “yes” a la ventana emergente “Confirm New Git Repository”. Responda “yes” a la ventana emergente “Confirm Restart RStudio”.\nSi instaló Git a través de GitHub para Windows, es posible que el ejecutable de Git esté realmente bien oculto. Obtenga ayuda o instale Git de otra manera.\nSu PATH probablemente no está configurado correctamente y/o debe reinstalar Git y controlar/notificar a dónde va. Lea más en 15.\nPida ayuda.\n4.3 Problemas y soluciones RStudio, Git, GitHub\nProblemas que se han visto y posibles soluciones.\nSi experimenta algún problema nuevo y, sobre todo, encuentra la solución correspondiente, se apreciará mucho saber de usted!\n4.3.1 El panel de Git de RStudio desaparece en Mac OS\nDespués de una actualización de Mac OS, es posible que deba activar las herramientas de línea de comandos de Xcode para solicitarle lo que necesita, es decir, volver a instalar o volver a aceptar el acuerdo de licencia. Hemos visto que esto provoca que el panel de RStudio Git desaparezca en un sistema donde estaba funcionando anteriormente. Use comandos como estos a continuación para hacerle cosquillas a Xcode:\n\n\nxcode-select --install\n\no\n\n\ngit config --global --list\n\nLuego reinicie RStudio.\n4.3.2 PATH disfuncional\nEs bastante seguro de que la mayoría de los casos en los que RStudio no detecta automáticamente el ejecutable de Git provienen de problemas con el PATH. Este es el conjunto de directorios donde la computadora buscará ejecutables, como Git (hoy) o make. Ciertos métodos de instalación de Git, especialmente en Windows y/o sistemas operativos más antiguos, tienen una mayor tendencia a poner Git en una ubicación no convencional o dejar de agregar el directorio correspondiente al PATH.\n¿Cómo ver su PATH?\nEn el shell:\n\n\necho $PATH\n\nEche un buen vistazo a eso. Vea el punto anterior sobre cómo encontrar su ejecutable Git o reinstalarlo mientras está completamente despierto. ¿El directorio de host está en su PATH? ¿No? Arréglelo\nVaya aquí para obtener instrucciones sobre qué poner en su .bash_profile para añadir un directorio al PATH.\n4.3.3 Botones Push/Pull atenuados en RStudio\n¿Está seguro de que su repositorio local está rastreando un repositorio remoto, por ejemplo, un repositorio de GitHub? En un shell con directorio de trabajo configurado en el repositorio local de Git, ingrese estos comandos:\n\nbrereton@2021-mbp myrepo $ git remote -v \norigin  https://github.com/jennybc/myrepo (fetch)\norigin  https://github.com/jennybc/myrepo (push)\n\nQueremos ver que fetch y push estén configurados en URL remotas que apuntan al repositorio remoto. Tenga en cuenta también que el repositorio de GitHub es un remoto llamado origen, en lo que respecta a su repositorio local. Esto es típico y, aunque creo que github es un nombre muy superior, el origen es una convención tan fuerte que lo sigo.\nSi descubre que todavía necesita configurar un control remoto, obtenga la URL HTTPS o SSH, según corresponda, para su repositorio GitHub. Esto es fácil de obtener en su portapapeles desde la página GitHub del repositorio. Haz esto en el shell:\n\ngit remote add origin https://github.com/brereton/myrepo.git\n\nDescargue todos los archivos del repositorio GitHub en línea y haga frente a cualquier conflicto.\n\ngit pull origin master\n\nLlame a git remote -v nuevamente. Una vez que pueda probar que su control remoto GitHub está configurado correctamente, puede pasar al siguiente paso.\n¿Estás seguro de que la sucursal actual está rastreando una sucursal en el control remoto? En ese mismo shell, en su repositorio, haga esto:\n\n\nbrereton@2021-mbp myrepo $ git branch -vv\n* master b8e03e3 [origin/master] line added locally\n\nLo anterior muestra la confirmación exitosa de que la rama master local está rastreando origin/master, es decir, la rama principal en GitHub. Si no ve el bit [origin/master], eso es un problema. Por cierto, git branch -r es otra forma útil de examinar las ramas de seguimiento remoto. (Si está trabajando con una rama que no sea master, ajuste todo en consecuencia).\nAl conectar un repositorio local a un nuevo repositorio de GitHub, mucha gente recuerda agregar el control remoto GitHub, pero también se olvida de consolidar esta relación de seguimiento para las sucursales relevantes.\nSi descubres que la rama master local todavía no está siguiendo ’master` en GitHub, corrige eso de la siguiente manera:\n\n\ngit push --set-upstream origin master\n\nEsto es equivalente a git push -u origin master, pero transmite más acerca de lo que está haciendo.\nLlame git branch -vv o git branch -r nuevamente para confirmar que la rama master en GitHub es la rama ascendente o de seguimiento para la ramamaster local.\n4.3.4 Falla en el push a nivel de RStudio\n¿Obtiene este error en RStudio?\n\n\nerror: unable to read askpass response from 'rpostback-askpass'\n\nAbra el shell: Tools > Shell.\n\n\n\ngit push -u origin master\n\n4.3.5 Se rumorea que tiene algún repositorio de Git dentro de otro repositorio de Git\nNo cree un repositorio de Git dentro de otro repositorio de Git. Simplemente no lo haga.\nSi tiene una necesidad real de esto, lo que es realmente raro, la forma correcta de hacerlo es a través de submódulos.\n5. Inicializar un repositorio Git\nAhora que ha instalado y configurado Git, puede usarlo localmente. La función use_git() agregará un repositorio Git (a menudo denominado “repositorio”) a un proyecto RStudio existente. Aquí crearé un nuevo proyecto y luego inicializaré un repositorio de Git.\nEn RStudio:\nCrear un Nuevo Proyecto en el menu File\nSeleccionar \"New Directory\"\nSeleccionar \"New Project\"\nEn crear nuevo proyecto, selecciones:\nActivar: \"Create a git repository\"\n\n\nEn la consola de RStudio:\n\n\nlibrary(usethis)\nusethis::use_git()\n# Elegir siempre la opción: 1\n# Y ante la ventana, seleccionar: \"Save\"\n\n\n\nY visitar la pestaña: \"Git\" en RStudio.\nGit en RStuioEn RStudio ve a Tools > Project Options > Git/SVN. Dentro de Version control system, selecciona Git. Y da click a “Yes” cuando aparezca “Confirm New Git Repository?”.\nSi usaste RStudio o usethis, el proyecto debería reiniciarse en RStudio. Hazlo tu mismo si hizo git init. RStudio ahora debería tener un panel Git.\n6. Ver historial de confirmación\nAhora que mi proyecto RStudio tiene un repositorio Git asociado, veré una pestaña adicional en la parte superior derecha: la pestaña Git. Desde aquí, puedo ver todo el historial de cambios en mi código a lo largo del tiempo (¡todavía no muchos!).\nEn RStudio:\nVisitar la pestaña: “Git” de RStudio\nPulsar el icono del reloj para ver el historial de “Commit” realizados para ver el “Initial Commit”.\n\n7. Haga una consolidación o confirmación (commit) y vea más historia\nGit no realiza un seguimiento automático de los cambios de la manera en que lo hace una herramienta como Google Docs. En su lugar, tienes que decirle a Git: hice cambios y quiero que mantengas un registro de ellos. Decirle a Git esto se llama hacer una confirmación (commit) y puedes hacerlo desde RStudio.\nCada confirmación tiene un mensaje de confirmación, lo que es útil porque, cuando miras tu historial de código, ves lo que hiciste en cada momento (es decir, en cada confirmación o commit). RStudio tiene una herramienta integrada para ver su historial de código. Puede hacer clic en cualquier confirmación para ver qué cambió, en relación con la confirmación anterior. Se agregaron líneas en verde; se eliminaron líneas en rojo.\nUn ejemplo practico, en RStudio realice lo siguiente:\nCrear un archivo de script R: llámelo “test.R” y guardelo.\nVisite la pestaña “Git” de RStudio y pulse sobre el botón de “commit” para confirmar la creación del archivo (fichero): “test.R”.\nEn el panel del commit añada un texto que lo defina, por ejemplo; Mi primer script R.\nHaga varios cambios en el fichero “test.R” y haga en cada uno de ellos de nuevo un “commit”.\nRevise luego la historia de los cambios que se han producido en el historial (pulsar el icono del reloj).\nObserve los nuevos cambios resaltados en color verde.\nFrente a los valores antiguos que aparecerán en color rojizo.\n\n8. Cómo conectar proyectos de RStudio con repositorios de GitHub\nAhora que hemos conectado RStudio y GitHub, discutamos cómo hacer que los dos funcionen juntos. La idea básica es que configure los proyectos que cree en RStudio con repositorios GitHub asociados. Cada proyecto de RStudio vive en un solo repositorio de GitHub.\n¿Cómo conectamos un proyecto de RStudio a un repositorio de GitHub? Happy Git with R repasa tres estrategias. Demostraré dos de ellos.\n8.1 RStudio Primero\nA veces, ya tiene un proyecto localmente y desea obtenerlo en GitHub. Para hacer esto, primero deberá usar la función use_git() de usethis, como hicimos anteriormente. Luego, puede usar la función use_github(), que creará un repositorio de GitHub y lo conectará a su proyecto RStudio actual.\nPara subir un proyecto RStudio en el que se ha configurado las opciones con Git a Github, se tienen que realizar los siguientes pasos en la consola de RStudio:\n\n\nlibrary(usethis)\nusethis::use_git()\n#hacer un commit\nusethis::use_github()\n#pedira nombre de usuario y token (ver usethis::edit_r_environ())\n\n\n\nSe realizará un proceso que activará la página web de Github con el repositorio asociado al proyecto que se acaba de crear en RStudio.\n8.2 GitHub Primero\nLa forma más sencilla de usar RStudio y GitHub juntos es crear un repositorio en GitHub primero. Cree el repositorio y, a continuación, cuando inicie un nuevo proyecto en RStudio, utilice la opción de control de versiones, introduzca la URL de su repositorio y listo.\nPara bajar un repositorio creado en Github a un proyecto local en RStudio, se tienen que realizar los siguientes pasos:\nCrear un nuevo repositorio en nuestra cuenta de Github (o utilizar uno ya existente): pulsar el botón “Create repository”.\nCopiar al portapapeles (clonar) la primera dirección que aparece (pulsando el botón de la derecha). Coincide con la dirección url que aparece en la barra del navegador.\nEn RStudio seleccionamos crear “New project”, elegimos \"Version Control\" y luego seleccionamos “Git”.\nIntroducimos en el primer cuadro de texto la url copiada anteriormente.\nPulsamos \"Create Project\".\nA continuación podrá consultarse la pestaña “Git” y ver la información asociada al repositorio descargado.\n9. Flujo de trabajo general\nAhora que hemos conectado RStudio y GitHub, podemos empujar y tirar de nuestro trabajo entre los dos.\n9.1 Push (Subir a Github)\nEmpujar significa enviar cualquier cambio en su código de RStudio a GitHub. Para hacer esto, primero tenemos que comprometernos. Después de confirmar, ahora tenemos un botón (la flecha hacia arriba) en RStudio que podemos usar para enviar nuestro código a GitHub.\nEn RStudio:\nCreamos un nuevo archivo (“fichero”) en “File”; un script R o un archivo .Rmd y lo guradamos.\nSe pulsa en la pestaña “Git” sobre el botón de “commit”.\nMarcamos todos los ficheros sobre los checks de “Staged”, rellenamos la descripción del commit y pulsamos sobre el botón de “commit”.\nDespués de hacer el commit, pulsamos sobre el botón “Push” para subir los cambios a Github.\nA continuación puede comprobarse en la página de Github del repositorio que se han actualizado los últimos ficheros considerados en el último commit.\n9.2 Pull (Descargar desde Github)\nLo opuesto a empujar es tirar (Pull). Utilizando el botón de flecha hacia abajo, RStudio va al repositorio de GitHub, toma el código más reciente y lo lleva a su editor local. (Tirar regularmente es extremadamente importante si estás colaborando, aunque si eres el único que trabaja en un proyecto de RStudio y un repositorio GitHub asociado, sabes que tu código local coincide con lo que está en GitHub, por lo que es menos importante.)\nEn la página de Github de nuestro repositorio:\nEditamos uno de los ficheros de nuestro repositorio pulsando sobre el icono de un lápiz (a la derecha).\nRealizamos alguna modificación sobre el fichero (o ficheros).\nPulsamos en la parte inferior de la página en el botón de “Commit changes” (rellenando los comentarios que creamos oportunos sobre el commit que se está realizando).\nSe puede navegar por la página de Github para consultar todos los commits realizados (y mucha más información).\nVolvemos a RStudio:\nEn la pestaña “Git” pulsamos sobre el botón de la flecha que apunta hacia abajo (verde) para realizar un “Pull” o descarga de los cambios en Github a nuestro proyecto local en RStudio.\nDespués de eso puede comprobarse que los ficheros locales de nuestro proyecto se han actualizado con los cambios que se han producido en el repositorio.\n¡Lo hiciste!\n¡Ahora está todo configurado para usar Git y GitHub con RStudio!\n10. Colaborando con Git y Github\nEste artículo es una traducción automática del artículo: https://www.sds.pub/collaborating-with-git-and-github.html\nCualquiera que haya trabajado alguna vez en cualquier tipo de proyecto de escritura colaborativa (código o de otro tipo) probablemente se ha encontrado con frustraciones del control de versiones. Por ejemplo, podría estar trabajando en algunas revisiones de un documento. Hago algunas modificaciones y se las envío a mi colega. En el momento en que obtienen mi versión, sin embargo, ya está detrás de su versión en otras áreas (por ejemplo, tal vez revisaron su descripción del análisis al mismo tiempo que proporcioné modificaciones al documento en su totalidad). No pueden simplemente aceptar mis ediciones sin perder otros cambios, pero les gustaría incorporar ambos cambios. En muchas situaciones como esta, el control de versiones se maneja mediante convenciones de nomenclatura, por ejemplo, ‘full-manuscript_v1.docx’ se convierte en ‘full-manuscript_v1da.docx’ que luego se convierte en ‘full-manuscript_v2.docx’ hasta que finalmente terminamos con ‘full-manuscript_vFinal.docx’ que inevitablemente termina como ‘full-manuscript_vFinalv2.docx’ y así sucesivamente hasta que realmente llamemos al documento completo. Git es un enfoque alternativo para administrar versiones de un documento mediante el seguimiento de los cambios en las líneas de los documentos. Si dos personas están trabajando en el mismo documento, pero editando líneas diferentes, esos cambios se fusionarán automáticamente. Sin embargo, fundamentalmente, no se pierde nada y la historia completa del proyecto se almacena desde su creación inicial hasta las etapas finales. Git se creó inicialmente para desarrolladores de software, pero abogamos por su uso para una gama más amplia de aplicaciones, incluidos documentos dinámicos. (es decir, cualquier cosa producida a través de RMarkdown). Desde nuestro punto de vista, la curva de aprendizaje de git es engañosamente empinada. A menudo vemos que las discusiones sobre git son simples (por ejemplo, ‘aprenda estos cinco comandos para trabajar con git’) con poca instrucción explícita dedicada al tema. Más bien, es una habilidad que se presume que uno ‘adquirirá’ en el camino. Si bien hay excepciones a esto (por ejemplo, el maravilloso libro Happy Git y GitHub para el usuario de Jenny Bryan), sentimos que es importante cubrir el tema de manera explícita.\n10.1 Colaborando\nUna de las ventajas de utilizar git es que proporciona un medio eficaz de colaboración. Sin embargo, no cualquiera puede contribuir directamente a su repositorio. Hay dos formas principales de colaborar en un repositorio con colegas: (a) agregar colaboradores a un repositorio existente, o (b) crear una organización y agregar colaboradores a repositorios específicos, o la organización en su conjunto. La principal diferencia entre estos es que las organizaciones suelen tener muchos repositorios y usted puede otorgar acceso a todos los repositorios simultáneamente. Podría considerar crear una organización para todo su laboratorio, por ejemplo, y luego tener diferentes repositorios para diferentes proyectos. Sin embargo, incluso dentro de las organizaciones, puede agregar colaboradores a repositorios individuales sin proporcionar acceso a toda la organización.\nPara agregar colaboradores a un repositorio, vaya a Settings -> Manage Access -> Invite a collaborato\n\nLuego, puede buscar personas por su nombre de usuario de GitHub, correo electrónico o su nombre / apellido. Una vez que se envía una invitación, la persona debe aceptar la invitación y luego tendrá acceso push al repositorio. Los colaboradores generalmente deben reservarse para personas que tienen roles continuos en el proyecto, con contribuciones directas. Las pequeñas correcciones de errores, etc., se pueden manejar con forks (bifurcaciones) de repositorio (descritas a continuación).\n10.2 Branching\nLa ramificación es un marco realmente poderoso para trabajar con git, y le sugerimos que se sienta cómodo lo antes posible. Cuando crea una rama, crea efectivamente una copia paralela de todo el repositorio. Puede realizar los cambios que desee en esa rama y estar seguro de que no romperá nada en la rama principal porque está completamente separada. Una vez que haya creado lo que sea en lo que estaba trabajando en su rama, y ​​haya decidido con sus colaboradores que debería ser parte de la rama principal, puede fusionarlo. Alternativamente, puede decidir que no quiere para hacer esos cambios, y luego puede simplemente tirar la rama a la basura y seguir adelante sin ninguna interrupción en la main branch. Como regla general, debe intentar nunca realizar cambios directamente en la rama principal. En su lugar, cree branches, realice cambios allí y luego combínelas. Esto ayuda a garantizar que los cambios se implementen en la main branch de una manera planificada, y puede usar sistemas de revisión con sus colegas para asegurarse de que todos estén en sintonía.\nMás información\nSi estás buscando aprender más y aún no te he ganado la idea de que deberías echar un vistazo a Happy Git with R, déjame intentarlo una vez más. Es el mejor libro para ayudarte a guiarte a medida que profundizas en el uso de Git/GitHub en tu trabajo de R.\nAquí hay algunos recursos adicionales de Git/GitHub para revisar:\nColaboración con git y GitHub: Este capítulo de los materiales del curso para Social Data Science with R en la Universidad de Oregon cubre los conceptos básicos de Git y GitHub.\nLos materiales de un taller de rstudio::conf de 2019 titulado “R para usuarios de Excel” cubren “control de versiones y practica un flujo de trabajo con GitHub y RStudio que optimiza el trabajo con nuestro colaborador más importante: Future You”.\n\n\n\n",
      "last_modified": "2022-03-31T12:36:14-03:00"
    }
  ],
  "collections": []
}
